{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/genre/Action.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchActionMovies } from '../../../actions';\nimport styles from './Action.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Action = props => {\n  _s();\n\n  var _props$movies;\n\n  useEffect(() => {\n    props.fetchActionMovies();\n  }, []); // if (!props.movies) {\n  //   return <div>Loading...</div>;\n  // }\n\n  const renderMovie = movie => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.img,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.poster,\n          src: `https://image.tmdb.org/t/p/original/${movie.poster_path}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.description,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.movietitle,\n          children: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.date,\n          children: movie.release_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.action,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Movies > \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.genre,\n        children: \"Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: (_props$movies = props.movies) === null || _props$movies === void 0 ? void 0 : _props$movies.map(movie => {\n        return renderMovie(movie);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Action, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Action;\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movies.action\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchActionMovies: fetchActionMovies\n})(Action); // export const Adventure = () => {\n//   return (\n//     <div>\n//       <h1>Adventure</h1>\n//     </div>\n//   );\n// };\n// export const Animation = () => {\n//   return (\n//     <div>\n//       <h1>Animation</h1>\n//     </div>\n//   );\n// };\n// export const Comedy = () => {\n//   return (\n//     <div>\n//       <h1>Comedy</h1>\n//     </div>\n//   );\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"Action\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/genre/Action.js"],"names":["React","useEffect","connect","fetchActionMovies","styles","Action","props","renderMovie","movie","content","img","poster","poster_path","description","movietitle","original_title","date","release_date","action","title","genre","container","movies","map","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AACxBL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAACH,iBAAN;AACD,GAFQ,EAEN,EAFM,CAAT,CADwB,CAKxB;AACA;AACA;;AAEA,QAAMI,WAAW,GAAIC,KAAD,IAAW;AAC7B,wBACE;AAAK,MAAA,SAAS,EAAEJ,MAAM,CAACK,OAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEL,MAAM,CAACM,GAAvB;AAAA,+BACE;AACE,UAAA,SAAS,EAAEN,MAAM,CAACO,MADpB;AAEE,UAAA,GAAG,EAAG,uCAAsCH,KAAK,CAACI,WAAY,EAFhE;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAER,MAAM,CAACS,WAAvB;AAAA,gCACE;AAAG,UAAA,SAAS,EAAET,MAAM,CAACU,UAArB;AAAA,oBAAkCN,KAAK,CAACO;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAEX,MAAM,CAACY,IAArB;AAAA,oBAA4BR,KAAK,CAACS;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBD;;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACc,MAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACe,KAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAEf,MAAM,CAACgB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACiB,SAAvB;AAAA,iCACGf,KAAK,CAACgB,MADT,kDACG,cAAcC,GAAd,CAAmBf,KAAD,IAAW;AAC5B,eAAOD,WAAW,CAACC,KAAD,CAAlB;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzCD;;GAAMH,M;;KAAAA,M;;AA2CN,MAAMmB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEH,IAAAA,MAAM,EAAEG,KAAK,CAACH,MAAN,CAAaJ;AAAvB,GAAP;AACD,CAFD;;AAIA,eAAehB,OAAO,CAACsB,eAAD,EAAkB;AACtCrB,EAAAA,iBAAiB,EAAEA;AADmB,CAAlB,CAAP,CAEZE,MAFY,CAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchActionMovies } from '../../../actions';\nimport styles from './Action.module.css';\n\nconst Action = (props) => {\n  useEffect(() => {\n    props.fetchActionMovies();\n  }, []);\n\n  // if (!props.movies) {\n  //   return <div>Loading...</div>;\n  // }\n\n  const renderMovie = (movie) => {\n    return (\n      <div className={styles.content}>\n        <div className={styles.img}>\n          <img\n            className={styles.poster}\n            src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n            alt=\"\"\n          />\n        </div>\n        <div className={styles.description}>\n          <p className={styles.movietitle}>{movie.original_title}</p>\n          <p className={styles.date}>{movie.release_date}</p>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles.action}>\n      <div className={styles.title}>\n        <span>Movies &gt; </span>\n        <h3 className={styles.genre}>Action</h3>\n      </div>\n\n      <div className={styles.container}>\n        {props.movies?.map((movie) => {\n          return renderMovie(movie);\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { movies: state.movies.action };\n};\n\nexport default connect(mapStateToProps, {\n  fetchActionMovies: fetchActionMovies,\n})(Action);\n\n// export const Adventure = () => {\n//   return (\n//     <div>\n//       <h1>Adventure</h1>\n//     </div>\n//   );\n// };\n\n// export const Animation = () => {\n//   return (\n//     <div>\n//       <h1>Animation</h1>\n//     </div>\n//   );\n// };\n\n// export const Comedy = () => {\n//   return (\n//     <div>\n//       <h1>Comedy</h1>\n//     </div>\n//   );\n// };\n"]},"metadata":{},"sourceType":"module"}