{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/detail/Cast.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './Cast.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cast = props => {\n  const cast = props.type === 'tv' ? props.tvcast : props.moviecast;\n\n  const renderCast = () => {\n    if (!cast) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this);\n    }\n\n    return cast.map(person => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.list,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.fig,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/original${person.profile_path}`,\n            alt: person.original_name,\n            className: styles.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.name,\n          children: person.original_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, person.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.title,\n      children: \"Cast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.wrap,\n      children: renderCast()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Cast;\n\nconst mapStateToProps = state => {\n  return {\n    moviecast: state.detail.cast,\n    tvcast: state.detail.tvcast\n  };\n};\n\nexport default connect(mapStateToProps)(Cast);\n\nvar _c;\n\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/detail/Cast.js"],"names":["React","connect","styles","Cast","props","cast","type","tvcast","moviecast","renderCast","map","person","list","fig","profile_path","original_name","img","name","id","title","wrap","mapStateToProps","state","detail"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAMC,IAAI,GAAGD,KAAK,CAACE,IAAN,KAAe,IAAf,GAAsBF,KAAK,CAACG,MAA5B,GAAqCH,KAAK,CAACI,SAAxD;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAI,CAACJ,IAAL,EAAW;AACT,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,WAAOA,IAAI,CAACK,GAAL,CAAUC,MAAD,IAAY;AAC1B,0BACE;AAAoB,QAAA,SAAS,EAAET,MAAM,CAACU,IAAtC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEV,MAAM,CAACW,GAAvB;AAAA,iCACE;AACE,YAAA,GAAG,EAAG,sCAAqCF,MAAM,CAACG,YAAa,EADjE;AAEE,YAAA,GAAG,EAAEH,MAAM,CAACI,aAFd;AAGE,YAAA,SAAS,EAAEb,MAAM,CAACc;AAHpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAG,UAAA,SAAS,EAAEd,MAAM,CAACe,IAArB;AAAA,oBAA4BN,MAAM,CAACI;AAAnC;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA,SAASJ,MAAM,CAACO,EAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAbM,CAAP;AAcD,GAnBD;;AAqBA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAG,MAAA,SAAS,EAAEhB,MAAM,CAACiB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAEjB,MAAM,CAACkB,IAAtB;AAAA,gBAA6BX,UAAU;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA9BD;;KAAMN,I;;AAgCN,MAAMkB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,SAAS,EAAEc,KAAK,CAACC,MAAN,CAAalB,IADnB;AAELE,IAAAA,MAAM,EAAEe,KAAK,CAACC,MAAN,CAAahB;AAFhB,GAAP;AAID,CALD;;AAOA,eAAeN,OAAO,CAACoB,eAAD,CAAP,CAAyBlB,IAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport styles from './Cast.module.css';\n\nconst Cast = (props) => {\n  const cast = props.type === 'tv' ? props.tvcast : props.moviecast;\n\n  const renderCast = () => {\n    if (!cast) {\n      return <div>Loading...</div>;\n    }\n\n    return cast.map((person) => {\n      return (\n        <li key={person.id} className={styles.list}>\n          <div className={styles.fig}>\n            <img\n              src={`https://image.tmdb.org/t/p/original${person.profile_path}`}\n              alt={person.original_name}\n              className={styles.img}\n            />\n          </div>\n          <p className={styles.name}>{person.original_name}</p>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <p className={styles.title}>Cast</p>\n      <ul className={styles.wrap}>{renderCast()}</ul>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    moviecast: state.detail.cast,\n    tvcast: state.detail.tvcast,\n  };\n};\n\nexport default connect(mapStateToProps)(Cast);\n"]},"metadata":{},"sourceType":"module"}