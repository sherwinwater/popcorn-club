{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/CastWrap.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CastWrap = props => {\n  const renderCast = () => {\n    return props.cast.map(person => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/original${person.profile_path}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: person.original_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, person.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: renderCast()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n\n_c = CastWrap;\nexport default CastWrap;\n\nvar _c;\n\n$RefreshReg$(_c, \"CastWrap\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/CastWrap.js"],"names":["React","CastWrap","props","renderCast","cast","map","person","profile_path","original_name","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAMC,UAAU,GAAG,MAAM;AACvB,WAAOD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAgBC,MAAD,IAAY;AAChC,0BACE;AAAA,gCACE;AACE,UAAA,GAAG,EAAG,sCAAqCA,MAAM,CAACC,YAAa;AADjE;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,oBAAID,MAAM,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA,SAASF,MAAM,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATM,CAAP;AAUD,GAXD;;AAaA,sBAAO;AAAA,cAAKN,UAAU;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAfD;;KAAMF,Q;AAiBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\n\nconst CastWrap = (props) => {\n  const renderCast = () => {\n    return props.cast.map((person) => {\n      return (\n        <li key={person.id}>\n          <img\n            src={`https://image.tmdb.org/t/p/original${person.profile_path}`}\n          />\n          <p>{person.original_name}</p>\n        </li>\n      );\n    });\n  };\n\n  return <ul>{renderCast()}</ul>;\n};\n\nexport default CastWrap;\n"]},"metadata":{},"sourceType":"module"}