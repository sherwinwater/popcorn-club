{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/genre/Action.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchActionMovies } from '../../../actions';\nimport styles from './Action.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Action = props => {\n  _s();\n\n  useEffect(() => {\n    props.fetchActionMovies();\n  }, []);\n\n  const renderMovie = () => {\n    if (!props.movies) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 14\n      }, this);\n    }\n\n    return props.movies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.poster,\n            src: `https://image.tmdb.org/t/p/original/${movie.poster_path}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.description,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.movietitle,\n            children: movie.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.date,\n            children: movie.release_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.action,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Movies > \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.genre,\n        children: \"Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: renderMovie()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Action, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Action;\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movies.action\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchActionMovies: fetchActionMovies\n})(Action);\n\nvar _c;\n\n$RefreshReg$(_c, \"Action\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/genre/Action.js"],"names":["React","useEffect","connect","fetchActionMovies","styles","Action","props","renderMovie","movies","map","movie","content","img","poster","poster_path","description","movietitle","original_title","date","release_date","action","title","genre","container","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxBL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAACH,iBAAN;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMI,WAAW,GAAG,MAAM;AACxB,QAAI,CAACD,KAAK,CAACE,MAAX,EAAmB;AACjB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,WAAOF,KAAK,CAACE,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IAAW;AACjC,0BACE;AAAK,QAAA,SAAS,EAAEN,MAAM,CAACO,OAAvB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEP,MAAM,CAACQ,GAAvB;AAAA,iCACE;AACE,YAAA,SAAS,EAAER,MAAM,CAACS,MADpB;AAEE,YAAA,GAAG,EAAG,uCAAsCH,KAAK,CAACI,WAAY,EAFhE;AAGE,YAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,SAAS,EAAEV,MAAM,CAACW,WAAvB;AAAA,kCACE;AAAG,YAAA,SAAS,EAAEX,MAAM,CAACY,UAArB;AAAA,sBAAkCN,KAAK,CAACO;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAEb,MAAM,CAACc,IAArB;AAAA,sBAA4BR,KAAK,CAACS;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAeD,KAhBM,CAAP;AAiBD,GAtBD;;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACgB,MAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACiB,KAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAEjB,MAAM,CAACkB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACmB,SAAvB;AAAA,gBAAmChB,WAAW;AAA9C;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAvCD;;GAAMF,M;;KAAAA,M;;AAyCN,MAAMmB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEjB,IAAAA,MAAM,EAAEiB,KAAK,CAACjB,MAAN,CAAaY;AAAvB,GAAP;AACD,CAFD;;AAIA,eAAelB,OAAO,CAACsB,eAAD,EAAkB;AACtCrB,EAAAA,iBAAiB,EAAEA;AADmB,CAAlB,CAAP,CAEZE,MAFY,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchActionMovies } from '../../../actions';\nimport styles from './Action.module.css';\n\nconst Action = (props) => {\n  useEffect(() => {\n    props.fetchActionMovies();\n  }, []);\n\n  const renderMovie = () => {\n    if (!props.movies) {\n      return <div>Loading...</div>;\n    }\n\n    return props.movies.map((movie) => {\n      return (\n        <div className={styles.content}>\n          <div className={styles.img}>\n            <img\n              className={styles.poster}\n              src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n              alt=\"\"\n            />\n          </div>\n          <div className={styles.description}>\n            <p className={styles.movietitle}>{movie.original_title}</p>\n            <p className={styles.date}>{movie.release_date}</p>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.action}>\n      <div className={styles.title}>\n        <span>Movies &gt; </span>\n        <h3 className={styles.genre}>Action</h3>\n      </div>\n\n      <div className={styles.container}>{renderMovie()}</div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { movies: state.movies.action };\n};\n\nexport default connect(mapStateToProps, {\n  fetchActionMovies: fetchActionMovies,\n})(Action);\n"]},"metadata":{},"sourceType":"module"}