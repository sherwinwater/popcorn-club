{"ast":null,"code":"import tmdb from '../apis/tmdb';\nimport requests from '../apis/requests'; // fetch movies based on selected menu whether it's genre, netflixoriginal, popular and so on from tmdb api\n// create action\n// And you call the action creator in componentDidMount of a component\n// url=\"/movie/now_playing?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n// HOME\n// export const fetchMovies = (type) => async (dispatch) => {\n//   const response = await tmdb.get(\n//     `/movie/${type}?api_key=8a45061d820fb7b5b5f574766f028ff6`\n//   );\n//   // console.log(response.data.results);\n//   dispatch({ type: 'MOVIE_NOWPLAYING', payload: response.data.results });\n// };\n\nexport const fetchMovieNowPlaying = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMovieNowPlaying); // console.log(response.data.results);\n\n  dispatch({\n    type: 'MOVIE_NOWPLAYING',\n    payload: response.data.results\n  });\n};\nexport const fetchTvOnAir = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchTvOnAir); // console.log(response.data.results);\n\n  dispatch({\n    type: 'TV_ONAIR',\n    payload: response.data.results\n  });\n}; // MOVIES\n\nexport const fetchMoviePopular = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMoviePopular);\n  dispatch({\n    type: 'MOVIE_POPULAR',\n    payload: response.data.results\n  });\n};\nexport const fetchMovieUpcoming = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMovieUpcoming);\n  dispatch({\n    type: 'MOVIE_UPCOMING',\n    payload: response.data.results\n  });\n};\nexport const fetchMovieTopRated = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMovieTopRated);\n  dispatch({\n    type: 'MOVIE_TOPRATED',\n    payload: response.data.results\n  });\n}; // TV\n\nexport const fetchTvPopular = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchTvPopular);\n  dispatch({\n    type: 'TV_POPULAR',\n    payload: response.data.results\n  });\n};\nexport const fetchTvTopRated = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchTvTopRated);\n  dispatch({\n    type: 'TV_TOPRATED',\n    payload: response.data.results\n  });\n}; // DETAIL\n\nexport const fetchDetail = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchDetail);\n  dispatch({\n    type: 'DETAIL',\n    payload: response.data\n  });\n};\nexport const fetchCredits = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchCredits);\n  dispatch({\n    type: 'CREDITS',\n    payload: response.data.cast.slice(0, 15)\n  });\n};\nexport const fetchReviews = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchReviews);\n  dispatch({\n    type: 'REVIEWS',\n    payload: response.data.results.slice(0, 3)\n  });\n};\nexport const fetchRelated = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchRelated);\n  dispatch({\n    type: 'RELATED',\n    payload: response.data.results\n  });\n}; // SEARCH\n\nexport const searchMovies = () => async dispatch => {\n  const response = await tmdb.get(requests.searchMovies);\n  dispatch({\n    type: 'SEARCH_MOVIES',\n    payload: response.data.results\n  });\n};\nexport const searchTvShows = () => async dispatch => {\n  const response = await tmdb.get(requests.searchTvShows);\n  dispatch({\n    type: 'SEARCH_TVS',\n    payload: response.data.results\n  });\n}; // NAVBAR\n// export const searchTvShows = () => async (dispatch) => {\n//   const response = await tmdb.get(requests.searchTvShows);\n//   dispatch({ type: 'SEARCH_TVS', payload: response.data.results });\n// };\n// export const navOpen = () => {\n//   return {\n//     type: NAV_OPEN,\n//     payload: userId,\n//   };\n// };","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/actions/index.js"],"names":["tmdb","requests","fetchMovieNowPlaying","dispatch","response","get","type","payload","data","results","fetchTvOnAir","fetchMoviePopular","fetchMovieUpcoming","fetchMovieTopRated","fetchTvPopular","fetchTvTopRated","fetchDetail","fetchCredits","cast","slice","fetchReviews","fetchRelated","searchMovies","searchTvShows"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,OAAOC,QAAP,MAAqB,kBAArB,C,CAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC5D,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACC,oBAAlB,CAAvB,CAD4D,CAG5D;;AACAC,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,kBAAR;AAA4BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAAnD,GAAD,CAAR;AACD,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOP,QAAP,IAAoB;AACpD,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACS,YAAlB,CAAvB,CADoD,CAGpD;;AACAP,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAA3C,GAAD,CAAR;AACD,CALM,C,CAOP;;AACA,OAAO,MAAME,iBAAiB,GAAG,MAAM,MAAOR,QAAP,IAAoB;AACzD,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACU,iBAAlB,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAAhD,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMG,kBAAkB,GAAG,MAAM,MAAOT,QAAP,IAAoB;AAC1D,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACW,kBAAlB,CAAvB;AAEAT,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAAjD,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMI,kBAAkB,GAAG,MAAM,MAAOV,QAAP,IAAoB;AAC1D,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACY,kBAAlB,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,gBAAR;AAA0BC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAAjD,GAAD,CAAR;AACD,CAJM,C,CAMP;;AACA,OAAO,MAAMK,cAAc,GAAG,MAAM,MAAOX,QAAP,IAAoB;AACtD,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACa,cAAlB,CAAvB;AAEAX,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAA7C,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMM,eAAe,GAAG,MAAM,MAAOZ,QAAP,IAAoB;AACvD,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACc,eAAlB,CAAvB;AAEAZ,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAA9C,GAAD,CAAR;AACD,CAJM,C,CAMP;;AACA,OAAO,MAAMO,WAAW,GAAG,MAAM,MAAOb,QAAP,IAAoB;AACnD,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACe,WAAlB,CAAvB;AAEAb,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAApC,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMS,YAAY,GAAG,MAAM,MAAOd,QAAP,IAAoB;AACpD,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACgB,YAAlB,CAAvB;AAEAd,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcU,IAAd,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4B,EAA5B;AAA5B,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOjB,QAAP,IAAoB;AACpD,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACmB,YAAlB,CAAvB;AAEAjB,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsBU,KAAtB,CAA4B,CAA5B,EAA+B,CAA/B;AAA5B,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAME,YAAY,GAAG,MAAM,MAAOlB,QAAP,IAAoB;AACpD,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACoB,YAAlB,CAAvB;AAEAlB,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAA1C,GAAD,CAAR;AACD,CAJM,C,CAMP;;AACA,OAAO,MAAMa,YAAY,GAAG,MAAM,MAAOnB,QAAP,IAAoB;AACpD,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACqB,YAAlB,CAAvB;AAEAnB,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAAhD,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMc,aAAa,GAAG,MAAM,MAAOpB,QAAP,IAAoB;AACrD,QAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASJ,QAAQ,CAACsB,aAAlB,CAAvB;AAEApB,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcC;AAA7C,GAAD,CAAR;AACD,CAJM,C,CAMP;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import tmdb from '../apis/tmdb';\nimport requests from '../apis/requests';\n\n// fetch movies based on selected menu whether it's genre, netflixoriginal, popular and so on from tmdb api\n// create action\n// And you call the action creator in componentDidMount of a component\n\n// url=\"/movie/now_playing?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n\n// HOME\n// export const fetchMovies = (type) => async (dispatch) => {\n//   const response = await tmdb.get(\n//     `/movie/${type}?api_key=8a45061d820fb7b5b5f574766f028ff6`\n//   );\n\n//   // console.log(response.data.results);\n//   dispatch({ type: 'MOVIE_NOWPLAYING', payload: response.data.results });\n// };\n\nexport const fetchMovieNowPlaying = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMovieNowPlaying);\n\n  // console.log(response.data.results);\n  dispatch({ type: 'MOVIE_NOWPLAYING', payload: response.data.results });\n};\n\nexport const fetchTvOnAir = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchTvOnAir);\n\n  // console.log(response.data.results);\n  dispatch({ type: 'TV_ONAIR', payload: response.data.results });\n};\n\n// MOVIES\nexport const fetchMoviePopular = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMoviePopular);\n\n  dispatch({ type: 'MOVIE_POPULAR', payload: response.data.results });\n};\n\nexport const fetchMovieUpcoming = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMovieUpcoming);\n\n  dispatch({ type: 'MOVIE_UPCOMING', payload: response.data.results });\n};\n\nexport const fetchMovieTopRated = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMovieTopRated);\n\n  dispatch({ type: 'MOVIE_TOPRATED', payload: response.data.results });\n};\n\n// TV\nexport const fetchTvPopular = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchTvPopular);\n\n  dispatch({ type: 'TV_POPULAR', payload: response.data.results });\n};\n\nexport const fetchTvTopRated = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchTvTopRated);\n\n  dispatch({ type: 'TV_TOPRATED', payload: response.data.results });\n};\n\n// DETAIL\nexport const fetchDetail = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchDetail);\n\n  dispatch({ type: 'DETAIL', payload: response.data });\n};\n\nexport const fetchCredits = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchCredits);\n\n  dispatch({ type: 'CREDITS', payload: response.data.cast.slice(0, 15) });\n};\n\nexport const fetchReviews = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchReviews);\n\n  dispatch({ type: 'REVIEWS', payload: response.data.results.slice(0, 3) });\n};\n\nexport const fetchRelated = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchRelated);\n\n  dispatch({ type: 'RELATED', payload: response.data.results });\n};\n\n// SEARCH\nexport const searchMovies = () => async (dispatch) => {\n  const response = await tmdb.get(requests.searchMovies);\n\n  dispatch({ type: 'SEARCH_MOVIES', payload: response.data.results });\n};\n\nexport const searchTvShows = () => async (dispatch) => {\n  const response = await tmdb.get(requests.searchTvShows);\n\n  dispatch({ type: 'SEARCH_TVS', payload: response.data.results });\n};\n\n// NAVBAR\n// export const searchTvShows = () => async (dispatch) => {\n//   const response = await tmdb.get(requests.searchTvShows);\n\n//   dispatch({ type: 'SEARCH_TVS', payload: response.data.results });\n// };\n\n// export const navOpen = () => {\n//   return {\n//     type: NAV_OPEN,\n//     payload: userId,\n//   };\n// };\n"]},"metadata":{},"sourceType":"module"}