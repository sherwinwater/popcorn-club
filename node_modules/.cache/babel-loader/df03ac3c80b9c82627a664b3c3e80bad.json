{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/MovieRow.js\";\nimport React from 'react';\nimport tmdb from '../../apis/tmdb';\nimport MovieList from './MovieList';\nimport styles from './MovieRow.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieRow extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: []\n    };\n  }\n\n  // componentDidMount() {\n  //   const fetchData = async () => {\n  //     const response = await tmdb.get(\n  //       '/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6'\n  //     );\n  //     console.log(response.data.results);\n  //     this.setState({ movies: response.data.results });\n  //   };\n  //   fetchData();\n  // }\n  componentDidMount() {\n    const fetchData = async () => {\n      // try to fetch only english movies\n      const response = await tmdb.get(this.props.url);\n      console.log(response.data.results);\n      this.setState({\n        movies: response.data.results\n      });\n    };\n\n    fetchData();\n  } // renderMovies() {\n  //   this.state.movies.map((movie) => {\n  //     return (\n  //       <li key={movie.id} className={styles.moviecard}>\n  //         <div className={styles.img}>\n  //           <img\n  //             className={styles.img__poster}\n  //             src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n  //             alt=\"\"\n  //           />\n  //         </div>\n  //         <p className={styles.title}>{movie.original_title}</p>\n  //         <p className={styles.date}>{movie.release_date}</p>\n  //       </li>\n  //     );\n  //   });\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.category,\n        children: this.props.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.contents,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: styles.wrapper,\n          children: /*#__PURE__*/_jsxDEV(MovieList, {\n            movies: this.state.movies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MovieRow;","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/MovieRow.js"],"names":["React","tmdb","MovieList","styles","MovieRow","Component","state","movies","componentDidMount","fetchData","response","get","props","url","console","log","data","results","setState","render","container","category","contents","wrapper"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAD6B;AAAA;;AAGrC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACAC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,SAAS,GAAG,YAAY;AAC5B;AACA,YAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACU,GAAL,CAAS,KAAKC,KAAL,CAAWC,GAApB,CAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,IAAT,CAAcC,OAA1B;AACA,WAAKC,QAAL,CAAc;AAAEX,QAAAA,MAAM,EAAEG,QAAQ,CAACM,IAAT,CAAcC;AAAxB,OAAd;AACD,KAND;;AAQAR,IAAAA,SAAS;AACV,GAzBoC,CA2BrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACiB,SAAvB;AAAA,8BACE;AAAG,QAAA,SAAS,EAAEjB,MAAM,CAACkB,QAArB;AAAA,kBAAgC,KAAKT,KAAL,CAAWS;AAA3C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAElB,MAAM,CAACmB,QAAvB;AAAA,+BAEE;AAAI,UAAA,SAAS,EAAEnB,MAAM,CAACoB,OAAtB;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAzDoC;;AA4DvC,eAAeH,QAAf","sourcesContent":["import React from 'react';\nimport tmdb from '../../apis/tmdb';\nimport MovieList from './MovieList';\nimport styles from './MovieRow.module.css';\n\nclass MovieRow extends React.Component {\n  state = { movies: [] };\n\n  // componentDidMount() {\n  //   const fetchData = async () => {\n  //     const response = await tmdb.get(\n  //       '/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6'\n  //     );\n\n  //     console.log(response.data.results);\n  //     this.setState({ movies: response.data.results });\n  //   };\n\n  //   fetchData();\n  // }\n  componentDidMount() {\n    const fetchData = async () => {\n      // try to fetch only english movies\n      const response = await tmdb.get(this.props.url);\n\n      console.log(response.data.results);\n      this.setState({ movies: response.data.results });\n    };\n\n    fetchData();\n  }\n\n  // renderMovies() {\n  //   this.state.movies.map((movie) => {\n  //     return (\n  //       <li key={movie.id} className={styles.moviecard}>\n  //         <div className={styles.img}>\n  //           <img\n  //             className={styles.img__poster}\n  //             src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n  //             alt=\"\"\n  //           />\n  //         </div>\n  //         <p className={styles.title}>{movie.original_title}</p>\n  //         <p className={styles.date}>{movie.release_date}</p>\n  //       </li>\n  //     );\n  //   });\n  // }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <p className={styles.category}>{this.props.category}</p>\n        <div className={styles.contents}>\n          {/* Can create moviecard component */}\n          <ul className={styles.wrapper}>\n            <MovieList movies={this.state.movies} />\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieRow;\n"]},"metadata":{},"sourceType":"module"}