{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/shows/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as AiIcons from 'react-icons/ai';\nimport tmdb from '../../apis/tmdb';\nimport styles from './MovieHeader.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieHeader = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [curSlide, setCurSlide] = useState(0); // const [activeIndex, setActiveIndex] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // try to fetch only english movies\n      const response = await tmdb.get('/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6'); // console.log(response.data.results);\n\n      console.log(response.data.results.slice(0, 3));\n      setMovies(response.data.results.slice(0, 10));\n    };\n\n    fetchData();\n  }, []);\n  const maxSlide = movies.length;\n\n  const nextSlide = () => {\n    if (curSlide === maxSlide - 1) {\n      setCurSlide(0);\n    } else {\n      setCurSlide(curSlide + 1);\n    }\n  };\n\n  const prevSlide = () => {\n    if (curSlide === 0) {\n      setCurSlide(maxSlide - 1);\n    } else {\n      setCurSlide(curSlide - 1);\n    }\n  };\n\n  const truncate = (str, n) => {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? `${str.substr(0, n - 1)}...` : str;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.slider,\n    children: [movies.map((movie, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.slide,\n        style: {\n          transform: `translateX(${100 * (i - curSlide)}%)`,\n          backgroundImage: `linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.8)), url('https://image.tmdb.org/t/p/original${movie.backdrop_path}')`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.description,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.name,\n            children: movie.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.overview,\n            children: truncate(movie.overview, 150)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.more,\n            children: \"More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles['btn-left'],\n      onClick: prevSlide,\n      children: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlineLeft, {\n        className: styles['btn-icon']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles['btn-right'],\n      onClick: nextSlide,\n      children: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlineRight, {\n        className: styles['btn-icon']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieHeader, \"7X1IlCN8JBrgXzZIK7TWjwMZ0MQ=\");\n\n_c = MovieHeader;\nexport default MovieHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieHeader\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/shows/Header.js"],"names":["React","useState","useEffect","AiIcons","tmdb","styles","MovieHeader","movies","setMovies","curSlide","setCurSlide","fetchData","response","get","console","log","data","results","slice","maxSlide","length","nextSlide","prevSlide","truncate","str","n","substr","slider","map","movie","i","slide","transform","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","description","name","original_title","overview","more","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as AiIcons from 'react-icons/ai';\nimport tmdb from '../../apis/tmdb';\nimport styles from './MovieHeader.module.css';\n\nconst MovieHeader = () => {\n  const [movies, setMovies] = useState([]);\n  const [curSlide, setCurSlide] = useState(0);\n  // const [activeIndex, setActiveIndex] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // try to fetch only english movies\n      const response = await tmdb.get(\n        '/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6'\n      );\n\n      // console.log(response.data.results);\n      console.log(response.data.results.slice(0, 3));\n      setMovies(response.data.results.slice(0, 10));\n    };\n\n    fetchData();\n  }, []);\n\n  const maxSlide = movies.length;\n\n  const nextSlide = () => {\n    if (curSlide === maxSlide - 1) {\n      setCurSlide(0);\n    } else {\n      setCurSlide(curSlide + 1);\n    }\n  };\n\n  const prevSlide = () => {\n    if (curSlide === 0) {\n      setCurSlide(maxSlide - 1);\n    } else {\n      setCurSlide(curSlide - 1);\n    }\n  };\n\n  const truncate = (str, n) => {\n    return str?.length > n ? `${str.substr(0, n - 1)}...` : str;\n  };\n\n  return (\n    <div className={styles.slider}>\n      {/* <p className={styles.popular}>Popular</p> */}\n      {movies.map((movie, i) => {\n        return (\n          <div\n            className={styles.slide}\n            key={movie.id}\n            style={{\n              transform: `translateX(${100 * (i - curSlide)}%)`,\n              backgroundImage: `linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.8)), url('https://image.tmdb.org/t/p/original${movie.backdrop_path}')`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center',\n            }}\n          >\n            {/* <div className={styles.img}>\n                <img\n                  className={styles.poster}\n                  src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n                  alt=\"\"\n                />\n              </div> */}\n            <div className={styles.description}>\n              <p className={styles.name}>{movie.original_title}</p>\n              <p className={styles.overview}>{truncate(movie.overview, 150)}</p>\n              <button className={styles.more}>More</button>\n            </div>\n          </div>\n        );\n      })}\n      <button className={styles['btn-left']} onClick={prevSlide}>\n        <AiIcons.AiOutlineLeft className={styles['btn-icon']} />\n      </button>\n      <button className={styles['btn-right']} onClick={nextSlide}>\n        <AiIcons.AiOutlineRight className={styles['btn-icon']} />\n      </button>\n      {/* <div className={styles.modal}>TITLE</div>\n        <div className={styles.overlay}></div> */}\n    </div>\n  );\n};\n\nexport default MovieHeader;\n"]},"metadata":{},"sourceType":"module"}