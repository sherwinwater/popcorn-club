{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/genre/Genre.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchActionMovies } from '../../../actions';\nimport styles from './Action.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Genre = props => {\n  // useEffect(() => {\n  //   props.fetchActionMovies(1);\n  //   props.fetchActionMovies(2);\n  //   props.fetchActionMovies(3);\n  // }, []);\n  // LATER!!! render 15~20 results per page\n  // export const getResultsPerPage = function (page = 1) {\n  //   state.search.page = page;\n  //   const start = (page - 1) * state.search.resultsPerPage;\n  //   const end = page * state.search.resultsPerPage;\n  //   return state.search.businesses.slice(start, end);\n  // };\n  // export const getAllPage = function () {\n  //   const rest = state.search.businesses.length % state.search.resultsPerPage;\n  //   if (rest === 0)\n  //     state.search.allPage =\n  //       state.search.businesses.length / state.search.resultsPerPage;\n  //   else\n  //     state.search.allPage =\n  //       Math.floor(\n  //         state.search.businesses.length / state.search.resultsPerPage\n  //       ) + 1;\n  // };\n  // const renderMovie = () => {\n  // };\n  if (!props.movies) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n\n  return props.movies.map(movie => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.img,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.poster,\n          src: `https://image.tmdb.org/t/p/original/${movie.poster_path}`,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.description,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.movietitle,\n          children: movie.original_title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.date,\n          children: movie.release_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }); // return (\n  //   <div className={styles.action}>\n  //     <div className={styles.title}>\n  //       <span>Movies &gt; </span>\n  //       <h3 className={styles.genre}>Action</h3>\n  //     </div>\n  //     <div className={styles.container}>{renderMovie()}</div>\n  //   </div>\n  // );\n};\n\n_c = Genre;\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.moviegenre.action\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchActionMovies: fetchActionMovies\n})(Genre);\n\nvar _c;\n\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/genre/Genre.js"],"names":["React","useEffect","connect","fetchActionMovies","styles","Genre","props","movies","map","movie","content","img","poster","poster_path","description","movietitle","original_title","date","release_date","mapStateToProps","state","moviegenre","action"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,MAAI,CAACA,KAAK,CAACC,MAAX,EAAmB;AACjB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,SAAOD,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IAAW;AACjC,wBACE;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACM,OAAvB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAEN,MAAM,CAACO,GAAvB;AAAA,+BACE;AACE,UAAA,SAAS,EAAEP,MAAM,CAACQ,MADpB;AAEE,UAAA,GAAG,EAAG,uCAAsCH,KAAK,CAACI,WAAY,EAFhE;AAGE,UAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAET,MAAM,CAACU,WAAvB;AAAA,gCACE;AAAG,UAAA,SAAS,EAAEV,MAAM,CAACW,UAArB;AAAA,oBAAkCN,KAAK,CAACO;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAEZ,MAAM,CAACa,IAArB;AAAA,oBAA4BR,KAAK,CAACS;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBM,CAAP,CAvCuB,CAyDvB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACD,CAnED;;KAAMb,K;;AAqEN,MAAMc,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEb,IAAAA,MAAM,EAAEa,KAAK,CAACC,UAAN,CAAiBC;AAA3B,GAAP;AACD,CAFD;;AAIA,eAAepB,OAAO,CAACiB,eAAD,EAAkB;AACtChB,EAAAA,iBAAiB,EAAEA;AADmB,CAAlB,CAAP,CAEZE,KAFY,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchActionMovies } from '../../../actions';\nimport styles from './Action.module.css';\n\nconst Genre = (props) => {\n  // useEffect(() => {\n  //   props.fetchActionMovies(1);\n  //   props.fetchActionMovies(2);\n  //   props.fetchActionMovies(3);\n  // }, []);\n\n  // LATER!!! render 15~20 results per page\n\n  // export const getResultsPerPage = function (page = 1) {\n  //   state.search.page = page;\n\n  //   const start = (page - 1) * state.search.resultsPerPage;\n  //   const end = page * state.search.resultsPerPage;\n\n  //   return state.search.businesses.slice(start, end);\n  // };\n\n  // export const getAllPage = function () {\n  //   const rest = state.search.businesses.length % state.search.resultsPerPage;\n\n  //   if (rest === 0)\n  //     state.search.allPage =\n  //       state.search.businesses.length / state.search.resultsPerPage;\n  //   else\n  //     state.search.allPage =\n  //       Math.floor(\n  //         state.search.businesses.length / state.search.resultsPerPage\n  //       ) + 1;\n  // };\n\n  // const renderMovie = () => {\n\n  // };\n\n  if (!props.movies) {\n    return <div>Loading...</div>;\n  }\n\n  return props.movies.map((movie) => {\n    return (\n      <div className={styles.content}>\n        <div className={styles.img}>\n          <img\n            className={styles.poster}\n            src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n            alt=\"\"\n          />\n        </div>\n        <div className={styles.description}>\n          <p className={styles.movietitle}>{movie.original_title}</p>\n          <p className={styles.date}>{movie.release_date}</p>\n        </div>\n      </div>\n    );\n  });\n\n  // return (\n  //   <div className={styles.action}>\n  //     <div className={styles.title}>\n  //       <span>Movies &gt; </span>\n  //       <h3 className={styles.genre}>Action</h3>\n  //     </div>\n\n  //     <div className={styles.container}>{renderMovie()}</div>\n  //   </div>\n  // );\n};\n\nconst mapStateToProps = (state) => {\n  return { movies: state.moviegenre.action };\n};\n\nexport default connect(mapStateToProps, {\n  fetchActionMovies: fetchActionMovies,\n})(Genre);\n"]},"metadata":{},"sourceType":"module"}