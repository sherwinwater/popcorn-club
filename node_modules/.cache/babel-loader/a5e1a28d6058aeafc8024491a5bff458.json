{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/client/src/pages/DetailTV.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as IoIcons from 'react-icons/io';\nimport { fetchTvDetail, fetchTvCredits, fetchTvRelated, saveTVs } from '../actions';\nimport Season from '../components/detail/Season';\nimport Cast from '../components/detail/Cast';\nimport Related from '../components/detail/Related';\nimport styles from './DetailTV.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailTV = props => {\n  _s();\n\n  // Use useState for setting selected id\n  // const [selectedShow, setSelectedShow] = useState(1668);\n  // Also movies added in the favorite could be stored in state. So, use redux for that?\n  useEffect(() => {\n    const {\n      id\n    } = props.match.params;\n    props.fetchTvDetail(id);\n    props.fetchTvCredits(id);\n    props.fetchTvRelated(id);\n  }, []);\n\n  const calcYear = date => {\n    // const year = date.slice(0, 4);\n    // return year;\n    const year = date === null || date === void 0 ? void 0 : date.split('-')[0];\n    return year;\n  };\n\n  const calcHour = runtime => {\n    // 139 -> 2hr 19min\n    const hr = Math.floor(runtime / 60);\n    const min = runtime % 60;\n\n    const hours = hr => {\n      if (hr === 0) {\n        return '';\n      } else {\n        return `${hr} hr`;\n      }\n    };\n\n    return `${hours(hr)} ${min} min`;\n  };\n\n  const onClick = (id, path, name, date) => {\n    props.saveTVs(id, path, name, date);\n  };\n\n  if (!props.detail) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.item,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.nav,\n      children: \"TV Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.detail,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.fig,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/original${props.detail.poster_path}`,\n            alt: props.detail.original_name,\n            className: styles.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.title,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: styles.titleName,\n              children: props.detail.original_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.favorite,\n              onClick: () => onClick(props.detail.id, props.detail.poster_path, props.detail.original_name, props.detail.first_air_date),\n              children: /*#__PURE__*/_jsxDEV(IoIcons.IoIosHeart, {\n                className: styles['favorite-icon']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.date,\n            children: calcYear(props.detail.first_air_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.timerate,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.runtime,\n              children: `${calcHour(props.detail.episode_run_time)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.rate,\n              children: [/*#__PURE__*/_jsxDEV(IoIcons.IoIosStar, {\n                className: styles['rate-icon']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: props.detail.vote_average\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.others,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.play,\n              children: [/*#__PURE__*/_jsxDEV(IoIcons.IoIosPlay, {\n                className: styles['play-icon']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Play\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              href: props.detail.homepage,\n              className: styles.link,\n              children: [/*#__PURE__*/_jsxDEV(IoIcons.IoIosLink, {\n                className: styles['link-icon']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Website\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.overview,\n            children: props.detail.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.seasons,\n        children: /*#__PURE__*/_jsxDEV(Season, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cast,\n        children: /*#__PURE__*/_jsxDEV(Cast, {\n          type: \"tv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.related,\n        children: /*#__PURE__*/_jsxDEV(Related, {\n          type: \"tv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DetailTV, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DetailTV;\n\nconst mapStateToProps = state => {\n  // console.log(state.detail.detail);\n  return {\n    detail: state.detail.tvdetail\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTvDetail: fetchTvDetail,\n  fetchTvCredits: fetchTvCredits,\n  fetchTvRelated: fetchTvRelated,\n  saveTVs: saveTVs\n})(DetailTV);\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailTV\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/client/src/pages/DetailTV.js"],"names":["React","useState","useEffect","connect","Link","IoIcons","fetchTvDetail","fetchTvCredits","fetchTvRelated","saveTVs","Season","Cast","Related","styles","DetailTV","props","id","match","params","calcYear","date","year","split","calcHour","runtime","hr","Math","floor","min","hours","onClick","path","name","detail","item","nav","container","fig","poster_path","original_name","img","content","title","titleName","favorite","first_air_date","timerate","episode_run_time","rate","vote_average","others","play","homepage","link","overview","seasons","cast","related","mapStateToProps","state","tvdetail"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as IoIcons from 'react-icons/io';\nimport {\n  fetchTvDetail,\n  fetchTvCredits,\n  fetchTvRelated,\n  saveTVs,\n} from '../actions';\nimport Season from '../components/detail/Season';\nimport Cast from '../components/detail/Cast';\nimport Related from '../components/detail/Related';\nimport styles from './DetailTV.module.css';\n\nconst DetailTV = (props) => {\n  // Use useState for setting selected id\n  // const [selectedShow, setSelectedShow] = useState(1668);\n\n  // Also movies added in the favorite could be stored in state. So, use redux for that?\n\n  useEffect(() => {\n    const { id } = props.match.params;\n\n    props.fetchTvDetail(id);\n    props.fetchTvCredits(id);\n    props.fetchTvRelated(id);\n  }, []);\n\n  const calcYear = (date) => {\n    // const year = date.slice(0, 4);\n    // return year;\n    const year = date?.split('-')[0];\n    return year;\n  };\n\n  const calcHour = (runtime) => {\n    // 139 -> 2hr 19min\n    const hr = Math.floor(runtime / 60);\n    const min = runtime % 60;\n    const hours = (hr) => {\n      if (hr === 0) {\n        return '';\n      } else {\n        return `${hr} hr`;\n      }\n    };\n    return `${hours(hr)} ${min} min`;\n  };\n\n  const onClick = (id, path, name, date) => {\n    props.saveTVs(id, path, name, date);\n  };\n\n  if (!props.detail) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className={styles.item}>\n      <h3 className={styles.nav}>TV Shows</h3>\n      <div className={styles.container}>\n        <div className={styles.detail}>\n          <div className={styles.fig}>\n            <img\n              src={`https://image.tmdb.org/t/p/original${props.detail.poster_path}`}\n              alt={props.detail.original_name}\n              className={styles.img}\n            />\n          </div>\n          <div className={styles.content}>\n            <div className={styles.title}>\n              <h4 className={styles.titleName}>{props.detail.original_name}</h4>\n              <button\n                className={styles.favorite}\n                onClick={() =>\n                  onClick(\n                    props.detail.id,\n                    props.detail.poster_path,\n                    props.detail.original_name,\n                    props.detail.first_air_date\n                  )\n                }\n              >\n                <IoIcons.IoIosHeart className={styles['favorite-icon']} />\n              </button>\n            </div>\n            <p className={styles.date}>\n              {calcYear(props.detail.first_air_date)}\n            </p>\n            <div className={styles.timerate}>\n              <p className={styles.runtime}>\n                {`${calcHour(props.detail.episode_run_time)}`}\n              </p>\n              <p className={styles.rate}>\n                <IoIcons.IoIosStar className={styles['rate-icon']} />\n                <p>{props.detail.vote_average}</p>\n              </p>\n            </div>\n\n            {/* Have to consider when there are multiple genres */}\n            {/* <p className={styles.genre}>{selectedMovie.genres[0].name}</p> */}\n\n            <div className={styles.others}>\n              <button className={styles.play}>\n                <IoIcons.IoIosPlay className={styles['play-icon']} />\n                <p>Play</p>\n              </button>\n              <button href={props.detail.homepage} className={styles.link}>\n                <IoIcons.IoIosLink className={styles['link-icon']} />\n                <p>Website</p>\n              </button>\n            </div>\n            <p className={styles.overview}>{props.detail.overview}</p>\n          </div>\n        </div>\n\n        {/* <div className={styles.cast}>\n          <CastWrap />\n        </div>\n\n        <div className={styles.reviews}>\n          <Reviews />\n        </div>\n\n        <div className={styles.related}>\n          <Related />\n        </div> */}\n\n        <div className={styles.seasons}>\n          <Season />\n        </div>\n\n        <div className={styles.cast}>\n          <Cast type=\"tv\" />\n        </div>\n\n        <div className={styles.related}>\n          <Related type=\"tv\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  // console.log(state.detail.detail);\n  return {\n    detail: state.detail.tvdetail,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTvDetail: fetchTvDetail,\n  fetchTvCredits: fetchTvCredits,\n  fetchTvRelated: fetchTvRelated,\n  saveTVs: saveTVs,\n})(DetailTV);\n"]},"metadata":{},"sourceType":"module"}