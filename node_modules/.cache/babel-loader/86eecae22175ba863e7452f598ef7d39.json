{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/client/src/pages/Detail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as IoIcons from 'react-icons/io';\nimport { fetchMovieDetail, fetchMovieCredits, fetchMovieReviews, fetchMovieRelated, saveMovies } from '../actions';\nimport CastWrap from '../components/detail/Cast';\nimport Reviews from '../components/detail/Reviews';\nimport Related from '../components/detail/Related';\nimport styles from './Detail.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Detail = props => {\n  _s();\n\n  // Use useState for setting selected id\n  // const [selectedMovie, setSelectedMovie] = useState(550);\n  // Also movies added in the favorite could be stored in state. So, use redux for that?\n  useEffect(() => {\n    const {\n      id\n    } = props.match.params;\n    props.fetchMovieDetail(id);\n    props.fetchMovieCredits(id);\n    props.fetchMovieReviews(id);\n    props.fetchMovieRelated(id);\n  }, []);\n\n  const calcYear = date => {\n    const year = date === null || date === void 0 ? void 0 : date.split('-')[0];\n    return year;\n  };\n\n  const calcHour = runtime => {\n    // 139 -> 2hr 19min\n    const hr = Math.floor(runtime / 60);\n    const min = runtime % 60;\n    return `${hr} hr ${min} min`;\n  };\n\n  const onClick = id => {\n    props.fetchMovieDetail(id);\n  };\n\n  if (!props.detail) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.item,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.nav,\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.detail,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.fig,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/original${props.detail.poster_path}`,\n            alt: props.detail.original_title,\n            className: styles.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.title,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: styles.titleName,\n              children: props.detail.original_title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.favorite,\n              onClick: () => onClick(props.detail.id),\n              children: /*#__PURE__*/_jsxDEV(IoIcons.IoIosHeart, {\n                className: styles['favorite-icon']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.date,\n            children: calcYear(props.detail.release_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.timerate,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.runtime,\n              children: `${calcHour(props.detail.runtime)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.rate,\n              children: [/*#__PURE__*/_jsxDEV(IoIcons.IoIosStar, {\n                className: styles['rate-icon']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: props.detail.vote_average\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.others,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.play,\n              children: [/*#__PURE__*/_jsxDEV(IoIcons.IoIosPlay, {\n                className: styles['play-icon']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Play\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              href: props.detail.homepage,\n              className: styles.link,\n              children: [/*#__PURE__*/_jsxDEV(IoIcons.IoIosLink, {\n                className: styles['link-icon']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Website\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.overview,\n            children: props.detail.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.cast,\n        children: /*#__PURE__*/_jsxDEV(CastWrap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.reviews,\n        children: /*#__PURE__*/_jsxDEV(Reviews, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.related,\n        children: /*#__PURE__*/_jsxDEV(Related, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Detail, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Detail;\n\nconst mapStateToProps = state => {\n  console.log(state.detail.detail);\n  return {\n    detail: state.detail.detail\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMovieDetail: fetchMovieDetail,\n  fetchMovieCredits: fetchMovieCredits,\n  fetchMovieReviews: fetchMovieReviews,\n  fetchMovieRelated: fetchMovieRelated,\n  saveMovies: saveMovies\n})(Detail);\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/client/src/pages/Detail.js"],"names":["React","useState","useEffect","connect","IoIcons","fetchMovieDetail","fetchMovieCredits","fetchMovieReviews","fetchMovieRelated","saveMovies","CastWrap","Reviews","Related","styles","Detail","props","id","match","params","calcYear","date","year","split","calcHour","runtime","hr","Math","floor","min","onClick","detail","item","nav","container","fig","poster_path","original_title","img","content","title","titleName","favorite","release_date","timerate","rate","vote_average","others","play","homepage","link","overview","cast","reviews","related","mapStateToProps","state","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as IoIcons from 'react-icons/io';\nimport {\n  fetchMovieDetail,\n  fetchMovieCredits,\n  fetchMovieReviews,\n  fetchMovieRelated,\n  saveMovies,\n} from '../actions';\nimport CastWrap from '../components/detail/Cast';\nimport Reviews from '../components/detail/Reviews';\nimport Related from '../components/detail/Related';\nimport styles from './Detail.module.css';\n\nconst Detail = (props) => {\n  // Use useState for setting selected id\n  // const [selectedMovie, setSelectedMovie] = useState(550);\n\n  // Also movies added in the favorite could be stored in state. So, use redux for that?\n\n  useEffect(() => {\n    const { id } = props.match.params;\n\n    props.fetchMovieDetail(id);\n    props.fetchMovieCredits(id);\n    props.fetchMovieReviews(id);\n    props.fetchMovieRelated(id);\n  }, []);\n\n  const calcYear = (date) => {\n    const year = date?.split('-')[0];\n    return year;\n  };\n\n  const calcHour = (runtime) => {\n    // 139 -> 2hr 19min\n    const hr = Math.floor(runtime / 60);\n    const min = runtime % 60;\n    return `${hr} hr ${min} min`;\n  };\n\n  const onClick = (id) => {\n    props.fetchMovieDetail(id);\n  };\n\n  if (!props.detail) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className={styles.item}>\n      <h3 className={styles.nav}>Movies</h3>\n      <div className={styles.container}>\n        <div className={styles.detail}>\n          <div className={styles.fig}>\n            <img\n              src={`https://image.tmdb.org/t/p/original${props.detail.poster_path}`}\n              alt={props.detail.original_title}\n              className={styles.img}\n            />\n          </div>\n          <div className={styles.content}>\n            <div className={styles.title}>\n              <h4 className={styles.titleName}>\n                {props.detail.original_title}\n              </h4>\n              <button\n                className={styles.favorite}\n                onClick={() => onClick(props.detail.id)}\n              >\n                <IoIcons.IoIosHeart className={styles['favorite-icon']} />\n              </button>\n            </div>\n            <p className={styles.date}>{calcYear(props.detail.release_date)}</p>\n            <div className={styles.timerate}>\n              <p className={styles.runtime}>\n                {`${calcHour(props.detail.runtime)}`}\n              </p>\n              <p className={styles.rate}>\n                <IoIcons.IoIosStar className={styles['rate-icon']} />\n                <p>{props.detail.vote_average}</p>\n              </p>\n            </div>\n\n            {/* Have to consider when there are multiple genres */}\n            {/* <p className={styles.genre}>{selectedMovie.genres[0].name}</p> */}\n\n            <div className={styles.others}>\n              <button className={styles.play}>\n                <IoIcons.IoIosPlay className={styles['play-icon']} />\n                <p>Play</p>\n              </button>\n              <button href={props.detail.homepage} className={styles.link}>\n                <IoIcons.IoIosLink className={styles['link-icon']} />\n                <p>Website</p>\n              </button>\n            </div>\n            <p className={styles.overview}>{props.detail.overview}</p>\n          </div>\n        </div>\n\n        <div className={styles.cast}>\n          <CastWrap />\n        </div>\n\n        <div className={styles.reviews}>\n          <Reviews />\n        </div>\n\n        <div className={styles.related}>\n          <Related />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  console.log(state.detail.detail);\n  return {\n    detail: state.detail.detail,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMovieDetail: fetchMovieDetail,\n  fetchMovieCredits: fetchMovieCredits,\n  fetchMovieReviews: fetchMovieReviews,\n  fetchMovieRelated: fetchMovieRelated,\n  saveMovies: saveMovies,\n})(Detail);\n"]},"metadata":{},"sourceType":"module"}