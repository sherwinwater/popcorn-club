{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/pages/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as AiIcons from 'react-icons/ai';\nimport tmdb from '../apis/tmdb';\nimport MovieRow from '../components/movies/MovieRow';\nimport styles from './Movies.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = 'https://image.tmdb.org/t/p/original'; // const url =\n//   'https://api.themoviedb.org/3/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6';\n\nconst Movies = () => {\n  _s();\n\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      // try to fetch only english movies\n      const response = await tmdb.get('/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6');\n      console.log(response.data.results);\n      setMovie(response.data.results[0]);\n    };\n\n    fetchData();\n  }, []);\n\n  const slider = function () {\n    const slides = document.querySelectorAll('.slide');\n    const btnLeft = document.querySelector('.slider__btn--left');\n    const btnRight = document.querySelector('.slider__btn--right');\n    const dotContainer = document.querySelector('.dots');\n    let curSlide = 0;\n    const maxSlide = slides.length; // remove later\n    // const slider = document.querySelector('.slider');\n    // slider.style.transform = 'scale(0.4) translateX(-800px)';\n    // slider.style.overflow = 'visible';\n    // Functions\n\n    const createDots = function () {\n      slides.forEach((_, i) => {\n        dotContainer.insertAdjacentHTML('beforeend', `<button class=\"dots__dot\" data-slide=\"${i}\"></button>`);\n      });\n    }; // createDots(); // made the init function\n\n\n    const activateDot = function (slide) {\n      document.querySelectorAll('.dots__dot').forEach(dot => dot.classList.remove('dots__dot--active'));\n      document.querySelector(`.dots__dot[data-slide=\"${slide}\"]`).classList.add('dots__dot--active');\n    }; // activateDot(0);  // made the init function\n\n\n    const goToSlide = function (slide) {\n      slides.forEach((s, i) => s.style.transform = `translateX(${100 * (i - slide)}%)`);\n    }; // // 0%, 100%, 200%, 300%\n    // slides.forEach((s, i) => (s.style.transform = `translateX(${100 * i}%)`));\n    // goToSlide(0); // made the init function\n    // Next slide\n\n\n    const nextSlide = function () {\n      if (curSlide === maxSlide - 1) {\n        curSlide = 0;\n      } else {\n        curSlide++;\n      }\n\n      goToSlide(curSlide);\n      activateDot(curSlide);\n    };\n\n    const prevSlide = function () {\n      if (curSlide === 0) {\n        curSlide = maxSlide - 1;\n      } else {\n        curSlide--;\n      }\n\n      goToSlide(curSlide);\n      activateDot(curSlide);\n    };\n\n    const init = function () {\n      goToSlide(0);\n      createDots();\n      activateDot(0);\n    };\n\n    init(); // Event handlers\n\n    btnRight.addEventListener('click', nextSlide // if (curSlide === maxSlide - 1) {\n    //   curSlide = 0;\n    // } else {\n    //   curSlide++;\n    // }\n    // // curSlide = 1: -100%, 0%, 100%, 200%\n    // // slides.forEach(\n    // //   (s, i) => (s.style.transform = `translateX(${100 * (i - curSlide)}%)`)\n    // // );\n    // goToSlide(curSlide);\n    );\n    btnLeft.addEventListener('click', prevSlide);\n    document.addEventListener('keydown', function (e) {\n      // console.log(e);\n      if (e.key === 'ArrowLeft') prevSlide(); // We also could have used short circuiting.\n\n      e.key === 'ArrowRight' && nextSlide();\n    }); // Event delegation\n\n    dotContainer.addEventListener('click', function (e) {\n      if (e.target.classList.contains('dots__dot')) {\n        // const slide = e.target.dataset.slide;\n        // destructuring\n        const {\n          slide\n        } = e.target.dataset;\n        goToSlide(slide);\n        activateDot(slide);\n      }\n    });\n  };\n\n  slider();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.movies,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.title,\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.slider,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.slide,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.poster,\n            src: `https://image.tmdb.org/t/p/original${movie.backdrop_path}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.name,\n          children: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles['btn-left'],\n        children: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlineLeft, {\n          className: styles['btn-icon']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles['btn-right'],\n        children: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlineRight, {\n          className: styles['btn-icon']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieRow, {\n      url: \"/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6\",\n      category: \"Popular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieRow, {\n      url: \"/movie/top_rated?api_key=8a45061d820fb7b5b5f574766f028ff6\",\n      category: \"Top Rated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieRow, {\n      url: \"/movie/upcoming?api_key=8a45061d820fb7b5b5f574766f028ff6\",\n      category: \"Upcoming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieRow, {\n      url: \"/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6\",\n      category: \"Popular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this); // as props: category(popular, toprated...),\n}; // const Row = ({ title, fetchUrl, isLargeRow }) => {\n//   const [movies, setMovies] = useState([]);\n//   const [trailerUrl, setTrailerUrl] = useState('');\n//   // Run once when the row loads, and don't run again.\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const response = await tmdb.get(fetchUrl);\n//       // console.log(response.data.results);\n//       setMovies(response.data.results);\n//     };\n//     fetchData();\n//   }, [fetchUrl]);\n//   const opts = {\n//     height: '390',\n//     width: '100%',\n//     playerVars: {\n//       autoplay: 1,\n//     },\n//   };\n//   // console.log(movies);\n//   const onClick = (movie) => {\n//     if (trailerUrl) {\n//       setTrailerUrl('');\n//     } else {\n//       movieTrailer(movie?.name || '')\n//         .then((url) => {\n//           const urlParams = new URLSearchParams(new URL(url).search);\n//           console.log(urlParams);\n//           setTrailerUrl(urlParams.get('v'));\n//         })\n//         .catch((err) => console.log(err));\n//     }\n//   };\n//   // poser_path looks like \"/2ST6l4WP7ZfqAetuttBqx8F3AAH.jpg\", and that's not a complete url. We need to append that to the base_url.\n//   const renderedMovies = movies.map((movie) => {\n//     return (\n//       <img\n//         onClick={() => onClick(movie)}\n//         className={`row__poster ${isLargeRow && 'row__posterLarge'}`}\n//         src={`${base_url}${\n//           isLargeRow ? movie.poster_path : movie.backdrop_path\n//         }`}\n//         alt={movie.name}\n//         key={movie.id}\n//       />\n//     );\n//   });\n//   return (\n//     <div className=\"row\">\n//       <h2>{title}</h2>\n//       <div className=\"row__posters\">{renderedMovies}</div>\n//       {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n//     </div>\n//   );\n// };\n\n\n_s(Movies, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/pages/Movies.js"],"names":["React","useState","useEffect","AiIcons","tmdb","MovieRow","styles","base_url","Movies","movie","setMovie","fetchData","response","get","console","log","data","results","slider","slides","document","querySelectorAll","btnLeft","querySelector","btnRight","dotContainer","curSlide","maxSlide","length","createDots","forEach","_","i","insertAdjacentHTML","activateDot","slide","dot","classList","remove","add","goToSlide","s","style","transform","nextSlide","prevSlide","init","addEventListener","e","key","target","contains","dataset","movies","title","img","poster","backdrop_path","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as AiIcons from 'react-icons/ai';\nimport tmdb from '../apis/tmdb';\nimport MovieRow from '../components/movies/MovieRow';\nimport styles from './Movies.module.css';\n\nconst base_url = 'https://image.tmdb.org/t/p/original';\n// const url =\n//   'https://api.themoviedb.org/3/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6';\n\nconst Movies = () => {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // try to fetch only english movies\n      const response = await tmdb.get(\n        '/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6'\n      );\n\n      console.log(response.data.results);\n      setMovie(response.data.results[0]);\n    };\n\n    fetchData();\n  }, []);\n\n  const slider = function () {\n    const slides = document.querySelectorAll('.slide');\n    const btnLeft = document.querySelector('.slider__btn--left');\n    const btnRight = document.querySelector('.slider__btn--right');\n    const dotContainer = document.querySelector('.dots');\n\n    let curSlide = 0;\n    const maxSlide = slides.length;\n\n    // remove later\n    // const slider = document.querySelector('.slider');\n    // slider.style.transform = 'scale(0.4) translateX(-800px)';\n    // slider.style.overflow = 'visible';\n\n    // Functions\n    const createDots = function () {\n      slides.forEach((_, i) => {\n        dotContainer.insertAdjacentHTML(\n          'beforeend',\n          `<button class=\"dots__dot\" data-slide=\"${i}\"></button>`\n        );\n      });\n    };\n    // createDots(); // made the init function\n\n    const activateDot = function (slide) {\n      document\n        .querySelectorAll('.dots__dot')\n        .forEach((dot) => dot.classList.remove('dots__dot--active'));\n\n      document\n        .querySelector(`.dots__dot[data-slide=\"${slide}\"]`)\n        .classList.add('dots__dot--active');\n    };\n    // activateDot(0);  // made the init function\n\n    const goToSlide = function (slide) {\n      slides.forEach(\n        (s, i) => (s.style.transform = `translateX(${100 * (i - slide)}%)`)\n      );\n    };\n\n    // // 0%, 100%, 200%, 300%\n    // slides.forEach((s, i) => (s.style.transform = `translateX(${100 * i}%)`));\n    // goToSlide(0); // made the init function\n\n    // Next slide\n    const nextSlide = function () {\n      if (curSlide === maxSlide - 1) {\n        curSlide = 0;\n      } else {\n        curSlide++;\n      }\n\n      goToSlide(curSlide);\n      activateDot(curSlide);\n    };\n\n    const prevSlide = function () {\n      if (curSlide === 0) {\n        curSlide = maxSlide - 1;\n      } else {\n        curSlide--;\n      }\n      goToSlide(curSlide);\n      activateDot(curSlide);\n    };\n\n    const init = function () {\n      goToSlide(0);\n      createDots();\n      activateDot(0);\n    };\n    init();\n\n    // Event handlers\n    btnRight.addEventListener(\n      'click',\n      nextSlide\n\n      // if (curSlide === maxSlide - 1) {\n      //   curSlide = 0;\n      // } else {\n      //   curSlide++;\n      // }\n\n      // // curSlide = 1: -100%, 0%, 100%, 200%\n      // // slides.forEach(\n      // //   (s, i) => (s.style.transform = `translateX(${100 * (i - curSlide)}%)`)\n      // // );\n      // goToSlide(curSlide);\n    );\n    btnLeft.addEventListener('click', prevSlide);\n\n    document.addEventListener('keydown', function (e) {\n      // console.log(e);\n      if (e.key === 'ArrowLeft') prevSlide();\n      // We also could have used short circuiting.\n      e.key === 'ArrowRight' && nextSlide();\n    });\n\n    // Event delegation\n    dotContainer.addEventListener('click', function (e) {\n      if (e.target.classList.contains('dots__dot')) {\n        // const slide = e.target.dataset.slide;\n        // destructuring\n        const { slide } = e.target.dataset;\n        goToSlide(slide);\n        activateDot(slide);\n      }\n    });\n  };\n  slider();\n\n  return (\n    <div className={styles.movies}>\n      <h3 className={styles.title}>Movies</h3>\n      <div className={styles.slider}>\n        <div className={styles.slide}>\n          {/* <div key={movie.id} className={styles.hero}> */}\n          <div className={styles.img}>\n            <img\n              className={styles.poster}\n              src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n              alt=\"\"\n            />\n          </div>\n          <p className={styles.name}>title</p>\n          {/* </div> */}\n        </div>\n        <button className={styles['btn-left']}>\n          <AiIcons.AiOutlineLeft className={styles['btn-icon']} />\n        </button>\n        <button className={styles['btn-right']}>\n          <AiIcons.AiOutlineRight className={styles['btn-icon']} />\n        </button>\n      </div>\n      <MovieRow\n        url=\"/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n        category=\"Popular\"\n      />\n      <MovieRow\n        url=\"/movie/top_rated?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n        category=\"Top Rated\"\n      />\n      <MovieRow\n        url=\"/movie/upcoming?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n        category=\"Upcoming\"\n      />\n      <MovieRow\n        url=\"/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n        category=\"Popular\"\n      />\n    </div>\n  );\n\n  // as props: category(popular, toprated...),\n};\n\n// const Row = ({ title, fetchUrl, isLargeRow }) => {\n//   const [movies, setMovies] = useState([]);\n//   const [trailerUrl, setTrailerUrl] = useState('');\n\n//   // Run once when the row loads, and don't run again.\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const response = await tmdb.get(fetchUrl);\n//       // console.log(response.data.results);\n//       setMovies(response.data.results);\n//     };\n\n//     fetchData();\n//   }, [fetchUrl]);\n\n//   const opts = {\n//     height: '390',\n//     width: '100%',\n//     playerVars: {\n//       autoplay: 1,\n//     },\n//   };\n\n//   // console.log(movies);\n\n//   const onClick = (movie) => {\n//     if (trailerUrl) {\n//       setTrailerUrl('');\n//     } else {\n//       movieTrailer(movie?.name || '')\n//         .then((url) => {\n//           const urlParams = new URLSearchParams(new URL(url).search);\n//           console.log(urlParams);\n//           setTrailerUrl(urlParams.get('v'));\n//         })\n//         .catch((err) => console.log(err));\n//     }\n//   };\n\n//   // poser_path looks like \"/2ST6l4WP7ZfqAetuttBqx8F3AAH.jpg\", and that's not a complete url. We need to append that to the base_url.\n//   const renderedMovies = movies.map((movie) => {\n//     return (\n//       <img\n//         onClick={() => onClick(movie)}\n//         className={`row__poster ${isLargeRow && 'row__posterLarge'}`}\n//         src={`${base_url}${\n//           isLargeRow ? movie.poster_path : movie.backdrop_path\n//         }`}\n//         alt={movie.name}\n//         key={movie.id}\n//       />\n//     );\n//   });\n\n//   return (\n//     <div className=\"row\">\n//       <h2>{title}</h2>\n//       <div className=\"row__posters\">{renderedMovies}</div>\n//       {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n//     </div>\n//   );\n// };\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}