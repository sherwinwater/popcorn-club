{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/tvs/TvCard.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport tmdb from '../../apis/tmdb';\nimport styles from './TvCard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TvCard = props => {\n  const handleSearchDetail = () => {\n    const searchDetail = async () => {\n      const response = await tmdb.get('/movie/550?api_key=8a45061d820fb7b5b5f574766f028ff6');\n      console.log(response.data);\n    };\n\n    searchDetail();\n  };\n\n  const calcYear = date => {\n    const year = date === null || date === void 0 ? void 0 : date.split('-')[0];\n    return year;\n  };\n\n  const renderMovies = () => {\n    if (!props.shows) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    }\n\n    return props.shows.map(show => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/detailtv/${show.id}`,\n        className: `${styles.card} ${styles[props.cname]}`,\n        onClick: handleSearchDetail,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.poster,\n            src: props.cname ? `https://image.tmdb.org/t/p/original${show.backdrop_path}` : `https://image.tmdb.org/t/p/original${show.poster_path}`,\n            alt: show.original_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), props.cname ? '' : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.title,\n          children: show.original_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), props.cname ? '' : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.title,\n          children: calcYear(show.first_air_date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, show.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: renderMovies()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n};\n\n_c = TvCard;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    shows: state.shows[ownProps.type]\n  };\n};\n\nexport default connect(mapStateToProps)(TvCard);\n\nvar _c;\n\n$RefreshReg$(_c, \"TvCard\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/tvs/TvCard.js"],"names":["React","connect","Link","tmdb","styles","TvCard","props","handleSearchDetail","searchDetail","response","get","console","log","data","calcYear","date","year","split","renderMovies","shows","map","show","id","card","cname","img","poster","backdrop_path","poster_path","original_name","title","first_air_date","mapStateToProps","state","ownProps","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,UAAMC,YAAY,GAAG,YAAY;AAC/B,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CACrB,qDADqB,CAAvB;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACD,KAND;;AAQAL,IAAAA,YAAY;AACb,GAVD;;AAYA,QAAMM,QAAQ,GAAIC,IAAD,IAAU;AACzB,UAAMC,IAAI,GAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAb;AACA,WAAOD,IAAP;AACD,GAHD;;AAKA,QAAME,YAAY,GAAG,MAAM;AACzB,QAAI,CAACZ,KAAK,CAACa,KAAX,EAAkB;AAChB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,WAAOb,KAAK,CAACa,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IAAU;AAC/B,0BACE,QAAC,IAAD;AACE,QAAA,EAAE,EAAG,aAAYA,IAAI,CAACC,EAAG,EAD3B;AAGE,QAAA,SAAS,EAAG,GAAElB,MAAM,CAACmB,IAAK,IAAGnB,MAAM,CAACE,KAAK,CAACkB,KAAP,CAAc,EAHnD;AAIE,QAAA,OAAO,EAAEjB,kBAJX;AAAA,gCAME;AAAK,UAAA,SAAS,EAAEH,MAAM,CAACqB,GAAvB;AAAA,iCACE;AACE,YAAA,SAAS,EAAErB,MAAM,CAACsB,MADpB;AAEE,YAAA,GAAG,EACDpB,KAAK,CAACkB,KAAN,GACK,sCAAqCH,IAAI,CAACM,aAAc,EAD7D,GAEK,sCAAqCN,IAAI,CAACO,WAAY,EAL/D;AAOE,YAAA,GAAG,EAAEP,IAAI,CAACQ;AAPZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,EAiBGvB,KAAK,CAACkB,KAAN,GACC,EADD,gBAGC;AAAG,UAAA,SAAS,EAAEpB,MAAM,CAAC0B,KAArB;AAAA,oBAA6BT,IAAI,CAACQ;AAAlC;AAAA;AAAA;AAAA;AAAA,gBApBJ,EAsBGvB,KAAK,CAACkB,KAAN,GACC,EADD,gBAGC;AAAG,UAAA,SAAS,EAAEpB,MAAM,CAAC0B,KAArB;AAAA,oBAA6BhB,QAAQ,CAACO,IAAI,CAACU,cAAN;AAArC;AAAA;AAAA;AAAA;AAAA,gBAzBJ;AAAA,SAEOV,IAAI,CAACC,EAFZ;AAAA;AAAA;AAAA;AAAA,cADF;AA8BD,KA/BM,CAAP;AAgCD,GArCD;;AAuCA,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAA,cAAiBJ,YAAY;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA1DD;;KAAMb,M;;AA4DN,MAAM2B,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AACLf,IAAAA,KAAK,EAAEc,KAAK,CAACd,KAAN,CAAYe,QAAQ,CAACC,IAArB;AADF,GAAP;AAGD,CAJD;;AAMA,eAAelC,OAAO,CAAC+B,eAAD,CAAP,CAAyB3B,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport tmdb from '../../apis/tmdb';\nimport styles from './TvCard.module.css';\n\nconst TvCard = (props) => {\n  const handleSearchDetail = () => {\n    const searchDetail = async () => {\n      const response = await tmdb.get(\n        '/movie/550?api_key=8a45061d820fb7b5b5f574766f028ff6'\n      );\n\n      console.log(response.data);\n    };\n\n    searchDetail();\n  };\n\n  const calcYear = (date) => {\n    const year = date?.split('-')[0];\n    return year;\n  };\n\n  const renderMovies = () => {\n    if (!props.shows) {\n      return <div>Loading...</div>;\n    }\n\n    return props.shows.map((show) => {\n      return (\n        <Link\n          to={`/detailtv/${show.id}`}\n          key={show.id}\n          className={`${styles.card} ${styles[props.cname]}`}\n          onClick={handleSearchDetail}\n        >\n          <div className={styles.img}>\n            <img\n              className={styles.poster}\n              src={\n                props.cname\n                  ? `https://image.tmdb.org/t/p/original${show.backdrop_path}`\n                  : `https://image.tmdb.org/t/p/original${show.poster_path}`\n              }\n              alt={show.original_name}\n            />\n          </div>\n          {props.cname ? (\n            ''\n          ) : (\n            <p className={styles.title}>{show.original_name}</p>\n          )}\n          {props.cname ? (\n            ''\n          ) : (\n            <p className={styles.title}>{calcYear(show.first_air_date)}</p>\n          )}\n        </Link>\n      );\n    });\n  };\n\n  return <React.Fragment>{renderMovies()}</React.Fragment>;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    shows: state.shows[ownProps.type],\n  };\n};\n\nexport default connect(mapStateToProps)(TvCard);\n"]},"metadata":{},"sourceType":"module"}