{"ast":null,"code":"import tmdb from \"../apis/tmdb\";\nimport requests from \"../apis/requests\";\nimport { API_KEY } from \"../apis/config\";\nimport favorites from \"../apis/favorites\";\nimport history from \"../history\"; // fetch movies based on selected menu whether it's genre, netflixoriginal, popular and so on from tmdb api\n// create action\n// And you call the action creator in componentDidMount of a component\n// url=\"/movie/now_playing?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n// HOME\n// export const fetchMovies = (type) => async (dispatch) => {\n//   const response = await tmdb.get(\n//     `/movie/${type}?api_key=8a45061d820fb7b5b5f574766f028ff6`\n//   );\n//   // console.log(response.data.results);\n//   dispatch({ type: 'MOVIE_NOWPLAYING', payload: response.data.results });\n// };\n\nexport const fetchMovieNowPlaying = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMovieNowPlaying); // console.log(response.data.results);\n\n  dispatch({\n    type: \"MOVIE_NOWPLAYING\",\n    payload: response.data.results\n  });\n};\nexport const fetchTvOnAir = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchTvOnAir); // console.log(response.data.results);\n\n  dispatch({\n    type: \"TV_ONAIR\",\n    payload: response.data.results\n  });\n}; // MOVIES\n\nexport const fetchMoviePopular = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMoviePopular);\n  dispatch({\n    type: \"MOVIE_POPULAR\",\n    payload: response.data.results\n  });\n};\nexport const fetchMovieUpcoming = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMovieUpcoming);\n  dispatch({\n    type: \"MOVIE_UPCOMING\",\n    payload: response.data.results\n  });\n};\nexport const fetchMovieTopRated = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMovieTopRated);\n  dispatch({\n    type: \"MOVIE_TOPRATED\",\n    payload: response.data.results\n  });\n}; // TV\n\nexport const fetchTvPopular = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchTvPopular);\n  dispatch({\n    type: \"TV_POPULAR\",\n    payload: response.data.results\n  });\n};\nexport const fetchTvTopRated = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchTvTopRated);\n  dispatch({\n    type: \"TV_TOPRATED\",\n    payload: response.data.results\n  });\n}; // DETAIL\n// export const fetchDetail = () => async (dispatch) => {\n//   const response = await tmdb.get(requests.fetchDetail);\n//   dispatch({ type: 'DETAIL', payload: response.data });\n// };\n\nexport const fetchMovieDetail = id => async dispatch => {\n  const response = await tmdb.get(`/movie/${id}?api_key=${API_KEY}`);\n  dispatch({\n    type: \"MOVIE_DETAIL\",\n    payload: response.data\n  });\n};\nexport const fetchMovieCredits = id => async dispatch => {\n  const response = await tmdb.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n  dispatch({\n    type: \"MOVIE_CREDITS\",\n    payload: response.data.cast.slice(0, 15)\n  });\n};\nexport const fetchMovieReviews = id => async dispatch => {\n  const response = await tmdb.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n  dispatch({\n    type: \"MOVIE_REVIEWS\",\n    payload: response.data.results.slice(0, 3)\n  });\n};\nexport const fetchMovieRelated = id => async dispatch => {\n  const response = await tmdb.get(`/movie/${id}/similar?api_key=${API_KEY}`);\n  dispatch({\n    type: \"MOVIE_RELATED\",\n    payload: response.data.results\n  });\n};\nexport const fetchTvDetail = id => async dispatch => {\n  const response = await tmdb.get(`/tv/${id}?api_key=${API_KEY}`);\n  dispatch({\n    type: \"TV_DETAIL\",\n    payload: response.data\n  });\n};\nexport const fetchTvSeason = id => async dispatch => {\n  const response = await tmdb.get(`/tv/${id}?api_key=${API_KEY}`);\n  dispatch({\n    type: \"TV_DETAIL\",\n    payload: response.data\n  });\n};\nexport const fetchTvCredits = id => async dispatch => {\n  const response = await tmdb.get(`/tv/${id}/credits?api_key=${API_KEY}`);\n  dispatch({\n    type: \"TV_CREDITS\",\n    payload: response.data.cast.slice(0, 15)\n  });\n};\nexport const fetchTvRelated = id => async dispatch => {\n  const response = await tmdb.get(`/tv/${id}/similar?api_key=${API_KEY}`);\n  dispatch({\n    type: \"TV_RELATED\",\n    payload: response.data.results\n  });\n}; // SEARCH\n\nexport const searchMovies = term => async dispatch => {\n  const response = await tmdb.get(`${requests.searchMovies}&query=${term}`);\n  dispatch({\n    type: \"SEARCH_MOVIES\",\n    payload: response.data.results\n  });\n  history.push(\"/search\");\n};\nexport const searchTvShows = term => async dispatch => {\n  const response = await tmdb.get(`${requests.searchTvShows}&query=${term}`);\n  dispatch({\n    type: \"SEARCH_TVS\",\n    payload: response.data.results\n  });\n}; // by Genres\n// movie\n\nexport const fetchActionMovies = () => async dispatch => {\n  // const response = await tmdb.get(`${requests.fetchActionMovies}&page=${page}`);\n  // dispatch({\n  //   type: 'FETCH_ACTION',\n  //   payload: response.data.results,\n  // });\n  const response = await Promise.all([tmdb.get(`${requests.fetchActionMovies}&page=1`), tmdb.get(`${requests.fetchActionMovies}&page=2`), tmdb.get(`${requests.fetchActionMovies}&page=3`)]);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_ACTION\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchAdventureMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchAdventureMovies}&page=1`), tmdb.get(`${requests.fetchAdventureMovies}&page=2`), tmdb.get(`${requests.fetchAdventureMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_ADVENTURE\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchAnimationMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchAnimationMovies}&page=1`), tmdb.get(`${requests.fetchAnimationMovies}&page=2`), tmdb.get(`${requests.fetchAnimationMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_ANIMATION\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchComedyMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchComedyMovies}&page=1`), tmdb.get(`${requests.fetchComedyMovies}&page=2`), tmdb.get(`${requests.fetchComedyMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_COMEDY\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchDocumentaryMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchDocumentaryMovies}&page=1`), tmdb.get(`${requests.fetchDocumentaryMovies}&page=2`), tmdb.get(`${requests.fetchDocumentaryMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_DOCUMENTARY\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchDramaMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchDramaMovies}&page=1`), tmdb.get(`${requests.fetchDramaMovies}&page=2`), tmdb.get(`${requests.fetchDramaMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_DRAMA\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchFantasyMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchFantasyMovies}&page=1`), tmdb.get(`${requests.fetchFantasyMovies}&page=2`), tmdb.get(`${requests.fetchFantasyMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_FANTASY\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchHorrorMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchHorrorMovies}&page=1`), tmdb.get(`${requests.fetchHorrorMovies}&page=2`), tmdb.get(`${requests.fetchHorrorMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_HORROR\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchRomanceMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchRomanceMovies}&page=1`), tmdb.get(`${requests.fetchRomanceMovies}&page=2`), tmdb.get(`${requests.fetchRomanceMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_ROMANCE\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchSciFiMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchSciFiMovies}&page=1`), tmdb.get(`${requests.fetchSciFiMovies}&page=2`), tmdb.get(`${requests.fetchSciFiMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_SCIFI\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n}; // tv\n\nexport const fetchActionAdventureTv = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchActionAdventureTv}&page=1`), tmdb.get(`${requests.fetchActionAdventureTv}&page=2`), tmdb.get(`${requests.fetchActionAdventureTv}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_ACTIONADVENTURESHOW\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchAnimationTv = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchAnimationTv}&page=1`), tmdb.get(`${requests.fetchAnimationTv}&page=2`), tmdb.get(`${requests.fetchAnimationTv}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_ANIMATIONSHOW\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchComedyTv = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchComedyTv}&page=1`), tmdb.get(`${requests.fetchComedyTv}&page=2`), tmdb.get(`${requests.fetchComedyTv}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_COMEDYSHOW\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchCrimeTv = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchCrimeTv}&page=1`), tmdb.get(`${requests.fetchCrimeTv}&page=2`), tmdb.get(`${requests.fetchCrimeTv}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_CRIMESHOW\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchDocumentaryTv = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchDocumentaryTv}&page=1`), tmdb.get(`${requests.fetchDocumentaryTv}&page=2`), tmdb.get(`${requests.fetchDocumentaryTv}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_DOCUMENTARYSHOW\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchDramaTv = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchDramaTv}&page=1`), tmdb.get(`${requests.fetchDramaTv}&page=2`), tmdb.get(`${requests.fetchDramaTv}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_DRAMASHOW\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchKidsTv = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchKidsTv}&page=1`), tmdb.get(`${requests.fetchKidsTv}&page=2`), tmdb.get(`${requests.fetchKidsTv}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_KIDSSHOW\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchMysteryTv = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchMysteryTv}&page=1`), tmdb.get(`${requests.fetchMysteryTv}&page=2`), tmdb.get(`${requests.fetchMysteryTv}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_MYSTERYSHOW\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchRealityTv = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchRealityTv}&page=1`), tmdb.get(`${requests.fetchRealityTv}&page=2`), tmdb.get(`${requests.fetchRealityTv}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: \"FETCH_REALITYSHOW\",\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n}; // FAVORITE\n\nexport const saveMovies = (id, poster_path, original_title, release_date) => async dispatch => {\n  const response = await favorites.post(\"/movies\", {\n    id,\n    poster_path,\n    original_title,\n    release_date\n  });\n  dispatch({\n    type: \"SAVE_MOVIE\",\n    payload: response.data\n  });\n};\nexport const saveTVs = (id, poster_path, original_name, first_air_date) => async dispatch => {\n  const response = await favorites.post(\"/tvs\", {\n    id,\n    poster_path,\n    original_name,\n    first_air_date\n  });\n  dispatch({\n    type: \"SAVE_TV\",\n    payload: response.data\n  });\n};\nexport const fetchFavoriteMovies = () => async dispatch => {\n  const response = await favorites.get(\"/movies\");\n  dispatch({\n    type: \"FAVORITE_MOVIES\",\n    payload: response.data\n  });\n};\nexport const fetchFavoriteTVs = () => async dispatch => {\n  const response = await favorites.get(\"/tvs\");\n  dispatch({\n    type: \"FAVORITE_TVS\",\n    payload: response.data\n  });\n};\nexport const deleteMovie = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n  history.push(\"/\");\n};","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/client/src/actions/index.js"],"names":["tmdb","requests","API_KEY","favorites","history","fetchMovieNowPlaying","dispatch","response","get","type","payload","data","results","fetchTvOnAir","fetchMoviePopular","fetchMovieUpcoming","fetchMovieTopRated","fetchTvPopular","fetchTvTopRated","fetchMovieDetail","id","fetchMovieCredits","cast","slice","fetchMovieReviews","fetchMovieRelated","fetchTvDetail","fetchTvSeason","fetchTvCredits","fetchTvRelated","searchMovies","term","push","searchTvShows","fetchActionMovies","Promise","all","map","res","fetchAdventureMovies","console","log","fetchAnimationMovies","fetchComedyMovies","fetchDocumentaryMovies","fetchDramaMovies","fetchFantasyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchSciFiMovies","fetchActionAdventureTv","fetchAnimationTv","fetchComedyTv","fetchCrimeTv","fetchDocumentaryTv","fetchDramaTv","fetchKidsTv","fetchMysteryTv","fetchRealityTv","saveMovies","poster_path","original_title","release_date","post","saveTVs","original_name","first_air_date","fetchFavoriteMovies","fetchFavoriteTVs","deleteMovie","streams","delete","DELETE_STREAM"],"mappings":"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","sourcesContent":["import tmdb from \"../apis/tmdb\";\nimport requests from \"../apis/requests\";\nimport { API_KEY } from \"../apis/config\";\nimport favorites from \"../apis/favorites\";\nimport history from \"../history\";\n\n// fetch movies based on selected menu whether it's genre, netflixoriginal, popular and so on from tmdb api\n// create action\n// And you call the action creator in componentDidMount of a component\n\n// url=\"/movie/now_playing?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n\n// HOME\n// export const fetchMovies = (type) => async (dispatch) => {\n//   const response = await tmdb.get(\n//     `/movie/${type}?api_key=8a45061d820fb7b5b5f574766f028ff6`\n//   );\n\n//   // console.log(response.data.results);\n//   dispatch({ type: 'MOVIE_NOWPLAYING', payload: response.data.results });\n// };\n\nexport const fetchMovieNowPlaying = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMovieNowPlaying);\n\n  // console.log(response.data.results);\n  dispatch({ type: \"MOVIE_NOWPLAYING\", payload: response.data.results });\n};\n\nexport const fetchTvOnAir = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchTvOnAir);\n\n  // console.log(response.data.results);\n  dispatch({ type: \"TV_ONAIR\", payload: response.data.results });\n};\n\n// MOVIES\nexport const fetchMoviePopular = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMoviePopular);\n\n  dispatch({ type: \"MOVIE_POPULAR\", payload: response.data.results });\n};\n\nexport const fetchMovieUpcoming = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMovieUpcoming);\n\n  dispatch({ type: \"MOVIE_UPCOMING\", payload: response.data.results });\n};\n\nexport const fetchMovieTopRated = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMovieTopRated);\n\n  dispatch({ type: \"MOVIE_TOPRATED\", payload: response.data.results });\n};\n\n// TV\nexport const fetchTvPopular = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchTvPopular);\n\n  dispatch({ type: \"TV_POPULAR\", payload: response.data.results });\n};\n\nexport const fetchTvTopRated = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchTvTopRated);\n\n  dispatch({ type: \"TV_TOPRATED\", payload: response.data.results });\n};\n\n// DETAIL\n// export const fetchDetail = () => async (dispatch) => {\n//   const response = await tmdb.get(requests.fetchDetail);\n\n//   dispatch({ type: 'DETAIL', payload: response.data });\n// };\n\nexport const fetchMovieDetail = (id) => async (dispatch) => {\n  const response = await tmdb.get(`/movie/${id}?api_key=${API_KEY}`);\n\n  dispatch({ type: \"MOVIE_DETAIL\", payload: response.data });\n};\n\nexport const fetchMovieCredits = (id) => async (dispatch) => {\n  const response = await tmdb.get(`/movie/${id}/credits?api_key=${API_KEY}`);\n\n  dispatch({ type: \"MOVIE_CREDITS\", payload: response.data.cast.slice(0, 15) });\n};\n\nexport const fetchMovieReviews = (id) => async (dispatch) => {\n  const response = await tmdb.get(`/movie/${id}/reviews?api_key=${API_KEY}`);\n\n  dispatch({\n    type: \"MOVIE_REVIEWS\",\n    payload: response.data.results.slice(0, 3),\n  });\n};\n\nexport const fetchMovieRelated = (id) => async (dispatch) => {\n  const response = await tmdb.get(`/movie/${id}/similar?api_key=${API_KEY}`);\n\n  dispatch({ type: \"MOVIE_RELATED\", payload: response.data.results });\n};\n\nexport const fetchTvDetail = (id) => async (dispatch) => {\n  const response = await tmdb.get(`/tv/${id}?api_key=${API_KEY}`);\n\n  dispatch({ type: \"TV_DETAIL\", payload: response.data });\n};\n\nexport const fetchTvSeason = (id) => async (dispatch) => {\n  const response = await tmdb.get(`/tv/${id}?api_key=${API_KEY}`);\n\n  dispatch({ type: \"TV_DETAIL\", payload: response.data });\n};\n\nexport const fetchTvCredits = (id) => async (dispatch) => {\n  const response = await tmdb.get(`/tv/${id}/credits?api_key=${API_KEY}`);\n\n  dispatch({ type: \"TV_CREDITS\", payload: response.data.cast.slice(0, 15) });\n};\n\nexport const fetchTvRelated = (id) => async (dispatch) => {\n  const response = await tmdb.get(`/tv/${id}/similar?api_key=${API_KEY}`);\n\n  dispatch({ type: \"TV_RELATED\", payload: response.data.results });\n};\n\n// SEARCH\nexport const searchMovies = (term) => async (dispatch) => {\n  const response = await tmdb.get(`${requests.searchMovies}&query=${term}`);\n\n  dispatch({ type: \"SEARCH_MOVIES\", payload: response.data.results });\n\n  history.push(\"/search\");\n};\n\nexport const searchTvShows = (term) => async (dispatch) => {\n  const response = await tmdb.get(`${requests.searchTvShows}&query=${term}`);\n\n  dispatch({ type: \"SEARCH_TVS\", payload: response.data.results });\n};\n\n// by Genres\n// movie\nexport const fetchActionMovies = () => async (dispatch) => {\n  // const response = await tmdb.get(`${requests.fetchActionMovies}&page=${page}`);\n\n  // dispatch({\n  //   type: 'FETCH_ACTION',\n  //   payload: response.data.results,\n  // });\n\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchActionMovies}&page=1`),\n    tmdb.get(`${requests.fetchActionMovies}&page=2`),\n    tmdb.get(`${requests.fetchActionMovies}&page=3`),\n  ]);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_ACTION\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchAdventureMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchAdventureMovies}&page=1`),\n    tmdb.get(`${requests.fetchAdventureMovies}&page=2`),\n    tmdb.get(`${requests.fetchAdventureMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_ADVENTURE\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchAnimationMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchAnimationMovies}&page=1`),\n    tmdb.get(`${requests.fetchAnimationMovies}&page=2`),\n    tmdb.get(`${requests.fetchAnimationMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_ANIMATION\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchComedyMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchComedyMovies}&page=1`),\n    tmdb.get(`${requests.fetchComedyMovies}&page=2`),\n    tmdb.get(`${requests.fetchComedyMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_COMEDY\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchDocumentaryMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchDocumentaryMovies}&page=1`),\n    tmdb.get(`${requests.fetchDocumentaryMovies}&page=2`),\n    tmdb.get(`${requests.fetchDocumentaryMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_DOCUMENTARY\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchDramaMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchDramaMovies}&page=1`),\n    tmdb.get(`${requests.fetchDramaMovies}&page=2`),\n    tmdb.get(`${requests.fetchDramaMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_DRAMA\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchFantasyMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchFantasyMovies}&page=1`),\n    tmdb.get(`${requests.fetchFantasyMovies}&page=2`),\n    tmdb.get(`${requests.fetchFantasyMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_FANTASY\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchHorrorMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchHorrorMovies}&page=1`),\n    tmdb.get(`${requests.fetchHorrorMovies}&page=2`),\n    tmdb.get(`${requests.fetchHorrorMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_HORROR\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchRomanceMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchRomanceMovies}&page=1`),\n    tmdb.get(`${requests.fetchRomanceMovies}&page=2`),\n    tmdb.get(`${requests.fetchRomanceMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_ROMANCE\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchSciFiMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchSciFiMovies}&page=1`),\n    tmdb.get(`${requests.fetchSciFiMovies}&page=2`),\n    tmdb.get(`${requests.fetchSciFiMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_SCIFI\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\n// tv\nexport const fetchActionAdventureTv = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchActionAdventureTv}&page=1`),\n    tmdb.get(`${requests.fetchActionAdventureTv}&page=2`),\n    tmdb.get(`${requests.fetchActionAdventureTv}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_ACTIONADVENTURESHOW\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchAnimationTv = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchAnimationTv}&page=1`),\n    tmdb.get(`${requests.fetchAnimationTv}&page=2`),\n    tmdb.get(`${requests.fetchAnimationTv}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_ANIMATIONSHOW\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchComedyTv = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchComedyTv}&page=1`),\n    tmdb.get(`${requests.fetchComedyTv}&page=2`),\n    tmdb.get(`${requests.fetchComedyTv}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_COMEDYSHOW\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchCrimeTv = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchCrimeTv}&page=1`),\n    tmdb.get(`${requests.fetchCrimeTv}&page=2`),\n    tmdb.get(`${requests.fetchCrimeTv}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_CRIMESHOW\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchDocumentaryTv = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchDocumentaryTv}&page=1`),\n    tmdb.get(`${requests.fetchDocumentaryTv}&page=2`),\n    tmdb.get(`${requests.fetchDocumentaryTv}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_DOCUMENTARYSHOW\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchDramaTv = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchDramaTv}&page=1`),\n    tmdb.get(`${requests.fetchDramaTv}&page=2`),\n    tmdb.get(`${requests.fetchDramaTv}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_DRAMASHOW\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchKidsTv = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchKidsTv}&page=1`),\n    tmdb.get(`${requests.fetchKidsTv}&page=2`),\n    tmdb.get(`${requests.fetchKidsTv}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_KIDSSHOW\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchMysteryTv = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchMysteryTv}&page=1`),\n    tmdb.get(`${requests.fetchMysteryTv}&page=2`),\n    tmdb.get(`${requests.fetchMysteryTv}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_MYSTERYSHOW\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchRealityTv = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchRealityTv}&page=1`),\n    tmdb.get(`${requests.fetchRealityTv}&page=2`),\n    tmdb.get(`${requests.fetchRealityTv}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: \"FETCH_REALITYSHOW\",\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\n// FAVORITE\nexport const saveMovies =\n  (id, poster_path, original_title, release_date) => async (dispatch) => {\n    const response = await favorites.post(\"/movies\", {\n      id,\n      poster_path,\n      original_title,\n      release_date,\n    });\n\n    dispatch({ type: \"SAVE_MOVIE\", payload: response.data });\n  };\n\nexport const saveTVs =\n  (id, poster_path, original_name, first_air_date) => async (dispatch) => {\n    const response = await favorites.post(\"/tvs\", {\n      id,\n      poster_path,\n      original_name,\n      first_air_date,\n    });\n\n    dispatch({ type: \"SAVE_TV\", payload: response.data });\n  };\n\nexport const fetchFavoriteMovies = () => async (dispatch) => {\n  const response = await favorites.get(\"/movies\");\n\n  dispatch({ type: \"FAVORITE_MOVIES\", payload: response.data });\n};\n\nexport const fetchFavoriteTVs = () => async (dispatch) => {\n  const response = await favorites.get(\"/tvs\");\n\n  dispatch({ type: \"FAVORITE_TVS\", payload: response.data });\n};\n\nexport const deleteMovie = (id) => async (dispatch) => {\n  await streams.delete(`/streams/${id}`);\n\n  dispatch({ type: DELETE_STREAM, payload: id });\n  history.push(\"/\");\n};\n"]},"metadata":{},"sourceType":"module"}