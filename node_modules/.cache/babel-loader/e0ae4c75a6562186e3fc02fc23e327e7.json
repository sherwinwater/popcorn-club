{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/movie-app/src/pages/Home.js\";\nimport React from 'react';\nimport MovieRow from '../components/movies/MovieRow';\nimport styles from './Home.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = 'https://image.tmdb.org/t/p/original'; // const url =\n//   'https://api.themoviedb.org/3/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6';\n\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.home,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles['home-nav'],\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieRow, {\n      url: \"/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6\",\n      category: \"Popular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieRow, {\n      url: \"/movie/top_rated?api_key=8a45061d820fb7b5b5f574766f028ff6\",\n      category: \"Top Rated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieRow, {\n      url: \"/movie/upcoming?api_key=8a45061d820fb7b5b5f574766f028ff6\",\n      category: \"Upcoming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieRow, {\n      url: \"/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6\",\n      category: \"Popular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this); // as props: category(popular, toprated...),\n}; // const Row = ({ title, fetchUrl, isLargeRow }) => {\n//   const [movies, setMovies] = useState([]);\n//   const [trailerUrl, setTrailerUrl] = useState('');\n//   // Run once when the row loads, and don't run again.\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const response = await tmdb.get(fetchUrl);\n//       // console.log(response.data.results);\n//       setMovies(response.data.results);\n//     };\n//     fetchData();\n//   }, [fetchUrl]);\n//   const opts = {\n//     height: '390',\n//     width: '100%',\n//     playerVars: {\n//       autoplay: 1,\n//     },\n//   };\n//   // console.log(movies);\n//   const onClick = (movie) => {\n//     if (trailerUrl) {\n//       setTrailerUrl('');\n//     } else {\n//       movieTrailer(movie?.name || '')\n//         .then((url) => {\n//           const urlParams = new URLSearchParams(new URL(url).search);\n//           console.log(urlParams);\n//           setTrailerUrl(urlParams.get('v'));\n//         })\n//         .catch((err) => console.log(err));\n//     }\n//   };\n//   // poser_path looks like \"/2ST6l4WP7ZfqAetuttBqx8F3AAH.jpg\", and that's not a complete url. We need to append that to the base_url.\n//   const renderedMovies = movies.map((movie) => {\n//     return (\n//       <img\n//         onClick={() => onClick(movie)}\n//         className={`row__poster ${isLargeRow && 'row__posterLarge'}`}\n//         src={`${base_url}${\n//           isLargeRow ? movie.poster_path : movie.backdrop_path\n//         }`}\n//         alt={movie.name}\n//         key={movie.id}\n//       />\n//     );\n//   });\n//   return (\n//     <div className=\"row\">\n//       <h2>{title}</h2>\n//       <div className=\"row__posters\">{renderedMovies}</div>\n//       {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n//     </div>\n//   );\n// };\n\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/movie-app/src/pages/Home.js"],"names":["React","MovieRow","styles","base_url","Home","home"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,QAAQ,GAAG,qCAAjB,C,CACA;AACA;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,sBACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACG,IAAvB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEH,MAAM,CAAC,UAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACE,MAAA,GAAG,EAAC,yDADN;AAEE,MAAA,QAAQ,EAAC;AAFX;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,QAAD;AACE,MAAA,GAAG,EAAC,2DADN;AAEE,MAAA,QAAQ,EAAC;AAFX;AAAA;AAAA;AAAA;AAAA,YANF,eAUE,QAAC,QAAD;AACE,MAAA,GAAG,EAAC,0DADN;AAEE,MAAA,QAAQ,EAAC;AAFX;AAAA;AAAA;AAAA;AAAA,YAVF,eAcE,QAAC,QAAD;AACE,MAAA,GAAG,EAAC,yDADN;AAEE,MAAA,QAAQ,EAAC;AAFX;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADiB,CAuBjB;AACD,CAxBD,C,CA0BA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAvFME,I;AAyFN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport MovieRow from '../components/movies/MovieRow';\nimport styles from './Home.module.css';\n\nconst base_url = 'https://image.tmdb.org/t/p/original';\n// const url =\n//   'https://api.themoviedb.org/3/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6';\n\nconst Home = () => {\n  return (\n    <div className={styles.home}>\n      <h3 className={styles['home-nav']}>Home</h3>\n      <MovieRow\n        url=\"/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n        category=\"Popular\"\n      />\n      <MovieRow\n        url=\"/movie/top_rated?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n        category=\"Top Rated\"\n      />\n      <MovieRow\n        url=\"/movie/upcoming?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n        category=\"Upcoming\"\n      />\n      <MovieRow\n        url=\"/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n        category=\"Popular\"\n      />\n    </div>\n  );\n\n  // as props: category(popular, toprated...),\n};\n\n// const Row = ({ title, fetchUrl, isLargeRow }) => {\n//   const [movies, setMovies] = useState([]);\n//   const [trailerUrl, setTrailerUrl] = useState('');\n\n//   // Run once when the row loads, and don't run again.\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const response = await tmdb.get(fetchUrl);\n//       // console.log(response.data.results);\n//       setMovies(response.data.results);\n//     };\n\n//     fetchData();\n//   }, [fetchUrl]);\n\n//   const opts = {\n//     height: '390',\n//     width: '100%',\n//     playerVars: {\n//       autoplay: 1,\n//     },\n//   };\n\n//   // console.log(movies);\n\n//   const onClick = (movie) => {\n//     if (trailerUrl) {\n//       setTrailerUrl('');\n//     } else {\n//       movieTrailer(movie?.name || '')\n//         .then((url) => {\n//           const urlParams = new URLSearchParams(new URL(url).search);\n//           console.log(urlParams);\n//           setTrailerUrl(urlParams.get('v'));\n//         })\n//         .catch((err) => console.log(err));\n//     }\n//   };\n\n//   // poser_path looks like \"/2ST6l4WP7ZfqAetuttBqx8F3AAH.jpg\", and that's not a complete url. We need to append that to the base_url.\n//   const renderedMovies = movies.map((movie) => {\n//     return (\n//       <img\n//         onClick={() => onClick(movie)}\n//         className={`row__poster ${isLargeRow && 'row__posterLarge'}`}\n//         src={`${base_url}${\n//           isLargeRow ? movie.poster_path : movie.backdrop_path\n//         }`}\n//         alt={movie.name}\n//         key={movie.id}\n//       />\n//     );\n//   });\n\n//   return (\n//     <div className=\"row\">\n//       <h2>{title}</h2>\n//       <div className=\"row__posters\">{renderedMovies}</div>\n//       {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n//     </div>\n//   );\n// };\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}