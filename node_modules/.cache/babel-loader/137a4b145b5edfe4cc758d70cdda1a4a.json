{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/genre/Genre.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchActionMovies } from '../../../actions';\nimport styles from './Action.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Genre = props => {\n  // useEffect(() => {\n  //   props.fetchActionMovies(1);\n  //   props.fetchActionMovies(2);\n  //   props.fetchActionMovies(3);\n  // }, []);\n  // LATER!!! render 15~20 results per page\n  // export const getResultsPerPage = function (page = 1) {\n  //   state.search.page = page;\n  //   const start = (page - 1) * state.search.resultsPerPage;\n  //   const end = page * state.search.resultsPerPage;\n  //   return state.search.businesses.slice(start, end);\n  // };\n  // export const getAllPage = function () {\n  //   const rest = state.search.businesses.length % state.search.resultsPerPage;\n  //   if (rest === 0)\n  //     state.search.allPage =\n  //       state.search.businesses.length / state.search.resultsPerPage;\n  //   else\n  //     state.search.allPage =\n  //       Math.floor(\n  //         state.search.businesses.length / state.search.resultsPerPage\n  //       ) + 1;\n  // };\n  // const renderMovie = () => {\n  // };\n  const renderMovies = movies => {\n    if (!movies) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    }\n\n    return movies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.poster,\n            src: `https://image.tmdb.org/t/p/original/${movie.poster_path}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.description,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.movietitle,\n            children: movie.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.date,\n            children: movie.release_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.title,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Movies > \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.genre,\n        children: \"Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.content,\n      children: /*#__PURE__*/_jsxDEV(Genre, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this); // return (\n  //   <div className={styles.action}>\n  //     <div className={styles.title}>\n  //       <span>Movies &gt; </span>\n  //       <h3 className={styles.genre}>Action</h3>\n  //     </div>\n  //     <div className={styles.container}>{renderMovie()}</div>\n  //   </div>\n  // );\n};\n\n_c = Genre;\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.moviegenre\n  };\n};\n\nexport default connect(mapStateToProps)(Genre);\n\nvar _c;\n\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/genre/Genre.js"],"names":["React","useEffect","connect","fetchActionMovies","styles","Genre","props","renderMovies","movies","map","movie","content","img","poster","poster_path","description","movietitle","original_title","date","release_date","container","title","genre","mapStateToProps","state","moviegenre"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/B,QAAI,CAACA,MAAL,EAAa;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,WAAOA,MAAM,CAACC,GAAP,CAAYC,KAAD,IAAW;AAC3B,0BACE;AAAK,QAAA,SAAS,EAAEN,MAAM,CAACO,OAAvB;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEP,MAAM,CAACQ,GAAvB;AAAA,iCACE;AACE,YAAA,SAAS,EAAER,MAAM,CAACS,MADpB;AAEE,YAAA,GAAG,EAAG,uCAAsCH,KAAK,CAACI,WAAY,EAFhE;AAGE,YAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,SAAS,EAAEV,MAAM,CAACW,WAAvB;AAAA,kCACE;AAAG,YAAA,SAAS,EAAEX,MAAM,CAACY,UAArB;AAAA,sBAAkCN,KAAK,CAACO;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAG,YAAA,SAAS,EAAEb,MAAM,CAACc,IAArB;AAAA,sBAA4BR,KAAK,CAACS;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAeD,KAhBM,CAAP;AAiBD,GAtBD;;AAwBA,sBACE;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACgB,SAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACiB,KAAvB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAI,QAAA,SAAS,EAAEjB,MAAM,CAACkB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAElB,MAAM,CAACO,OAAvB;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CA3DuB,CAwEvB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACD,CAlFD;;KAAMN,K;;AAoFN,MAAMkB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEhB,IAAAA,MAAM,EAAEgB,KAAK,CAACC;AAAhB,GAAP;AACD,CAFD;;AAIA,eAAevB,OAAO,CAACqB,eAAD,CAAP,CAAyBlB,KAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchActionMovies } from '../../../actions';\nimport styles from './Action.module.css';\n\nconst Genre = (props) => {\n  // useEffect(() => {\n  //   props.fetchActionMovies(1);\n  //   props.fetchActionMovies(2);\n  //   props.fetchActionMovies(3);\n  // }, []);\n\n  // LATER!!! render 15~20 results per page\n\n  // export const getResultsPerPage = function (page = 1) {\n  //   state.search.page = page;\n\n  //   const start = (page - 1) * state.search.resultsPerPage;\n  //   const end = page * state.search.resultsPerPage;\n\n  //   return state.search.businesses.slice(start, end);\n  // };\n\n  // export const getAllPage = function () {\n  //   const rest = state.search.businesses.length % state.search.resultsPerPage;\n\n  //   if (rest === 0)\n  //     state.search.allPage =\n  //       state.search.businesses.length / state.search.resultsPerPage;\n  //   else\n  //     state.search.allPage =\n  //       Math.floor(\n  //         state.search.businesses.length / state.search.resultsPerPage\n  //       ) + 1;\n  // };\n\n  // const renderMovie = () => {\n\n  // };\n\n  const renderMovies = (movies) => {\n    if (!movies) {\n      return <div>Loading...</div>;\n    }\n\n    return movies.map((movie) => {\n      return (\n        <div className={styles.content}>\n          <div className={styles.img}>\n            <img\n              className={styles.poster}\n              src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}\n              alt=\"\"\n            />\n          </div>\n          <div className={styles.description}>\n            <p className={styles.movietitle}>{movie.original_title}</p>\n            <p className={styles.date}>{movie.release_date}</p>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.title}>\n        <span>Movies &gt; </span>\n        <h3 className={styles.genre}>Action</h3>\n      </div>\n\n      <div className={styles.content}>\n        <Genre />\n      </div>\n    </div>\n  );\n\n  // return (\n  //   <div className={styles.action}>\n  //     <div className={styles.title}>\n  //       <span>Movies &gt; </span>\n  //       <h3 className={styles.genre}>Action</h3>\n  //     </div>\n\n  //     <div className={styles.container}>{renderMovie()}</div>\n  //   </div>\n  // );\n};\n\nconst mapStateToProps = (state) => {\n  return { movies: state.moviegenre };\n};\n\nexport default connect(mapStateToProps)(Genre);\n"]},"metadata":{},"sourceType":"module"}