{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport SidebarData from './SidebarData'; // import Sidebar from './Sidebar';\n\nimport styles from './Navbar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = props => {\n  _s();\n\n  const [sidebar, setSidebar] = useState(false); // const [subnav, setSubnav] = useState(false);\n  // const showSubnav = () => {\n  //   setSubnav(!subnav);\n  // };\n\n  const showSidebar = () => {\n    setSidebar(!sidebar);\n  }; // Try to close sidebar also when clicking somewhere in a body element using document.addEventListener('click, {})\n\n\n  return /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n    value: {\n      color: '#f7f7f7'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: styles.menu,\n        children: /*#__PURE__*/_jsxDEV(FaIcons.FaBars, {\n          onClick: showSidebar,\n          className: styles['menu-icon']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: sidebar ? `${styles.sidebar} ${styles.active}` : styles.sidebar,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.items,\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.toggle,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"#\",\n            className: styles.menu,\n            children: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlineClose, {\n              onClick: showSidebar,\n              className: styles['menu-icon']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), SidebarData.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles[item.className] // onClick={showSidebar}\n            ,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: item.path // onClick={item.subNav && showSubnav}\n              ,\n              className: styles.mainmenu,\n              children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.span,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.dropdown\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), item.subNav.map((sub, index) => {\n              return /*#__PURE__*/_jsxDEV(Link, {\n                to: sub.path,\n                className: styles.submenu,\n                children: [sub.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.label,\n                  children: sub.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this);\n            })]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"mZ7SSBV4HOS6G3DuZI2UdZN0ZTs=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/Navbar.js"],"names":["React","useState","Link","FaIcons","AiIcons","IconContext","SidebarData","styles","Navbar","props","sidebar","setSidebar","showSidebar","color","navbar","menu","children","active","items","toggle","map","item","index","className","path","mainmenu","icon","span","title","dropdown","subNav","sub","submenu","label"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport SidebarData from './SidebarData';\n// import Sidebar from './Sidebar';\nimport styles from './Navbar.module.css';\n\nconst Navbar = (props) => {\n  const [sidebar, setSidebar] = useState(false);\n  // const [subnav, setSubnav] = useState(false);\n\n  // const showSubnav = () => {\n  //   setSubnav(!subnav);\n  // };\n\n  const showSidebar = () => {\n    setSidebar(!sidebar);\n  };\n\n  // Try to close sidebar also when clicking somewhere in a body element using document.addEventListener('click, {})\n\n  return (\n    <IconContext.Provider value={{ color: '#f7f7f7' }}>\n      <div className={styles.navbar}>\n        {/* Would be better if this can be replaced an cinema icon */}\n        <Link to=\"#\" className={styles.menu}>\n          <FaIcons.FaBars\n            onClick={showSidebar}\n            className={styles['menu-icon']}\n          />\n        </Link>\n        {props.children}\n      </div>\n      <nav\n        className={\n          sidebar ? `${styles.sidebar} ${styles.active}` : styles.sidebar\n        }\n      >\n        <ul className={styles.items}>\n          <li className={styles.toggle}>\n            <Link to=\"#\" className={styles.menu}>\n              <AiIcons.AiOutlineClose\n                onClick={showSidebar}\n                className={styles['menu-icon']}\n              />\n            </Link>\n          </li>\n          {SidebarData.map((item, index) => {\n            return (\n              <li\n                key={index}\n                className={styles[item.className]}\n                // onClick={showSidebar}\n              >\n                {/* <Sidebar key={index} item={item} /> */}\n                <Link\n                  to={item.path}\n                  // onClick={item.subNav && showSubnav}\n                  className={styles.mainmenu}\n                >\n                  {item.icon}\n                  <span className={styles.span}>{item.title}</span>\n                  <div className={styles.dropdown}>\n                    {/* {item.subNav && subnav\n                      ? item.iconOpened\n                      : item.subNav\n                      ? item.iconClosed\n                      : null} */}\n                    {/* {item.subNav && subnav\n                      ? item.iconOpened\n                      : item.subNav\n                      ? item.iconClosed\n                      : null} */}\n                  </div>\n                </Link>\n                {/* {subnav &&\n                  item.subNav.map((sub, index) => {\n                    return (\n                      <Link\n                        to={sub.path}\n                        key={index}\n                        className={styles.submenu}\n                      >\n                        {sub.icon}\n                        <span className={styles.label}>{sub.title}</span>\n                      </Link>\n                    );\n                  })} */}\n                {item.subNav.map((sub, index) => {\n                  return (\n                    <Link to={sub.path} key={index} className={styles.submenu}>\n                      {sub.icon}\n                      <span className={styles.label}>{sub.title}</span>\n                    </Link>\n                  );\n                })}\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n    </IconContext.Provider>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}