{"ast":null,"code":"import tmdb from '../apis/tmdb';\nimport requests from '../apis/requests'; // fetch movies based on selected menu whether it's genre, netflixoriginal, popular and so on from tmdb api\n// create action\n// And you call the action creator in componentDidMount of a component\n// url=\"/movie/now_playing?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n// HOME\n\nexport const fetchMovies = type => async dispatch => {\n  const response = await tmdb.get('/movie/now_playing?api_key=${API_KEY}'); // console.log(response.data.results);\n\n  dispatch({\n    type: 'MOVIE_NOWPLAYING',\n    payload: response.data.results\n  });\n};\nexport const fetchMovieNowPlaying = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMovieNowPlaying); // console.log(response.data.results);\n\n  dispatch({\n    type: 'MOVIE_NOWPLAYING',\n    payload: response.data.results\n  });\n};\nexport const fetchTvOnAir = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchTvOnAir); // console.log(response.data.results);\n\n  dispatch({\n    type: 'TV_ONAIR',\n    payload: response.data.results\n  });\n}; // MOVIES\n\nexport const fetchMoviePopular = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMoviePopular);\n  dispatch({\n    type: 'MOVIE_POPULAR',\n    payload: response.data.results\n  });\n};\nexport const fetchMovieUpcoming = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMovieUpcoming);\n  dispatch({\n    type: 'MOVIE_UPCOMING',\n    payload: response.data.results\n  });\n};\nexport const fetchMovieTopRated = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMovieTopRated);\n  dispatch({\n    type: 'MOVIE_TOPRATED',\n    payload: response.data.results\n  });\n}; // TV\n\nexport const fetchTvPopular = () => async () => {};\nexport const fetchTvTopRated = () => async () => {};","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/actions/index.js"],"names":["tmdb","requests","fetchMovies","type","dispatch","response","get","payload","data","results","fetchMovieNowPlaying","fetchTvOnAir","fetchMoviePopular","fetchMovieUpcoming","fetchMovieTopRated","fetchTvPopular","fetchTvTopRated"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,OAAOC,QAAP,MAAqB,kBAArB,C,CAEA;AACA;AACA;AAEA;AAEA;;AACA,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACvD,QAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAAS,uCAAT,CAAvB,CADuD,CAGvD;;AACAF,EAAAA,QAAQ,CAAC;AAAED,IAAAA,IAAI,EAAE,kBAAR;AAA4BI,IAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAAnD,GAAD,CAAR;AACD,CALM;AAOP,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAON,QAAP,IAAoB;AAC5D,QAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAASL,QAAQ,CAACS,oBAAlB,CAAvB,CAD4D,CAG5D;;AACAN,EAAAA,QAAQ,CAAC;AAAED,IAAAA,IAAI,EAAE,kBAAR;AAA4BI,IAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAAnD,GAAD,CAAR;AACD,CALM;AAOP,OAAO,MAAME,YAAY,GAAG,MAAM,MAAOP,QAAP,IAAoB;AACpD,QAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAASL,QAAQ,CAACU,YAAlB,CAAvB,CADoD,CAGpD;;AACAP,EAAAA,QAAQ,CAAC;AAAED,IAAAA,IAAI,EAAE,UAAR;AAAoBI,IAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAA3C,GAAD,CAAR;AACD,CALM,C,CAOP;;AACA,OAAO,MAAMG,iBAAiB,GAAG,MAAM,MAAOR,QAAP,IAAoB;AACzD,QAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAASL,QAAQ,CAACW,iBAAlB,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAAED,IAAAA,IAAI,EAAE,eAAR;AAAyBI,IAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAAhD,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMI,kBAAkB,GAAG,MAAM,MAAOT,QAAP,IAAoB;AAC1D,QAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAASL,QAAQ,CAACY,kBAAlB,CAAvB;AAEAT,EAAAA,QAAQ,CAAC;AAAED,IAAAA,IAAI,EAAE,gBAAR;AAA0BI,IAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAAjD,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMK,kBAAkB,GAAG,MAAM,MAAOV,QAAP,IAAoB;AAC1D,QAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,GAAL,CAASL,QAAQ,CAACa,kBAAlB,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AAAED,IAAAA,IAAI,EAAE,gBAAR;AAA0BI,IAAAA,OAAO,EAAEF,QAAQ,CAACG,IAAT,CAAcC;AAAjD,GAAD,CAAR;AACD,CAJM,C,CAMP;;AACA,OAAO,MAAMM,cAAc,GAAG,MAAM,YAAY,CAAE,CAA3C;AAEP,OAAO,MAAMC,eAAe,GAAG,MAAM,YAAY,CAAE,CAA5C","sourcesContent":["import tmdb from '../apis/tmdb';\nimport requests from '../apis/requests';\n\n// fetch movies based on selected menu whether it's genre, netflixoriginal, popular and so on from tmdb api\n// create action\n// And you call the action creator in componentDidMount of a component\n\n// url=\"/movie/now_playing?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n\n// HOME\nexport const fetchMovies = (type) => async (dispatch) => {\n  const response = await tmdb.get('/movie/now_playing?api_key=${API_KEY}');\n\n  // console.log(response.data.results);\n  dispatch({ type: 'MOVIE_NOWPLAYING', payload: response.data.results });\n};\n\nexport const fetchMovieNowPlaying = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMovieNowPlaying);\n\n  // console.log(response.data.results);\n  dispatch({ type: 'MOVIE_NOWPLAYING', payload: response.data.results });\n};\n\nexport const fetchTvOnAir = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchTvOnAir);\n\n  // console.log(response.data.results);\n  dispatch({ type: 'TV_ONAIR', payload: response.data.results });\n};\n\n// MOVIES\nexport const fetchMoviePopular = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMoviePopular);\n\n  dispatch({ type: 'MOVIE_POPULAR', payload: response.data.results });\n};\n\nexport const fetchMovieUpcoming = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMovieUpcoming);\n\n  dispatch({ type: 'MOVIE_UPCOMING', payload: response.data.results });\n};\n\nexport const fetchMovieTopRated = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMovieTopRated);\n\n  dispatch({ type: 'MOVIE_TOPRATED', payload: response.data.results });\n};\n\n// TV\nexport const fetchTvPopular = () => async () => {};\n\nexport const fetchTvTopRated = () => async () => {};\n"]},"metadata":{},"sourceType":"module"}