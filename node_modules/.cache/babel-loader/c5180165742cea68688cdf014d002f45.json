{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/pages/Movies.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport * as AiIcons from 'react-icons/ai';\nimport tmdb from '../apis/tmdb';\nimport MovieRow from '../components/movies/MovieRow';\nimport styles from './Movies.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = 'https://image.tmdb.org/t/p/original'; // const url =\n//   'https://api.themoviedb.org/3/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6';\n\nconst Movies = () => {\n  _s();\n\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      // try to fetch only english movies\n      const response = await tmdb.get('/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6');\n      console.log(response.data.results);\n      setMovie(response.data.results[0]);\n    };\n\n    fetchData();\n  }, []);\n\n  const slider = () => {\n    const slides = document.querySelectorAll('.slide');\n    const btnLeft = document.querySelector('.slider__btn--left');\n    const btnRight = document.querySelector('.slider__btn--right');\n    let curSlide = 0;\n    const maxSlide = slides.length;\n\n    const goToSlide = function (slide) {\n      slides.forEach((s, i) => s.style.transform = `translateX(${100 * (i - slide)}%)`);\n    };\n\n    const nextSlide = function () {\n      if (curSlide === maxSlide - 1) {\n        curSlide = 0;\n      } else {\n        curSlide++;\n      }\n\n      goToSlide(curSlide);\n    };\n\n    const prevSlide = function () {\n      if (curSlide === 0) {\n        curSlide = maxSlide - 1;\n      } else {\n        curSlide--;\n      }\n\n      goToSlide(curSlide);\n    };\n\n    const init = function () {\n      goToSlide(0);\n      createDots();\n      activateDot(0);\n    };\n\n    init(); // Event handlers\n\n    btnRight.addEventListener('click', nextSlide);\n    btnLeft.addEventListener('click', prevSlide);\n    document.addEventListener('keydown', function (e) {\n      if (e.key === 'ArrowLeft') prevSlide();\n      e.key === 'ArrowRight' && nextSlide();\n    });\n  };\n\n  slider();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.movies,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.title,\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.slider,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.slide,\n        style: {\n          transform: 'translateX()'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.poster,\n            src: `https://image.tmdb.org/t/p/original${movie.backdrop_path}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.name,\n          children: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.slide,\n        style: {\n          transform: 'translateX()'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.poster,\n            src: `https://image.tmdb.org/t/p/original${movie.backdrop_path}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.name,\n          children: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.slide,\n        style: {\n          transform: 'translateX()'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.img,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: styles.poster,\n            src: `https://image.tmdb.org/t/p/original${movie.backdrop_path}`,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.name,\n          children: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles['btn-left'],\n        children: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlineLeft, {\n          className: styles['btn-icon']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles['btn-right'],\n        children: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlineRight, {\n          className: styles['btn-icon']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieRow, {\n      url: \"/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6\",\n      category: \"Popular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieRow, {\n      url: \"/movie/top_rated?api_key=8a45061d820fb7b5b5f574766f028ff6\",\n      category: \"Top Rated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieRow, {\n      url: \"/movie/upcoming?api_key=8a45061d820fb7b5b5f574766f028ff6\",\n      category: \"Upcoming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieRow, {\n      url: \"/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6\",\n      category: \"Popular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this); // as props: category(popular, toprated...),\n}; // const Row = ({ title, fetchUrl, isLargeRow }) => {\n//   const [movies, setMovies] = useState([]);\n//   const [trailerUrl, setTrailerUrl] = useState('');\n//   // Run once when the row loads, and don't run again.\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const response = await tmdb.get(fetchUrl);\n//       // console.log(response.data.results);\n//       setMovies(response.data.results);\n//     };\n//     fetchData();\n//   }, [fetchUrl]);\n//   const opts = {\n//     height: '390',\n//     width: '100%',\n//     playerVars: {\n//       autoplay: 1,\n//     },\n//   };\n//   // console.log(movies);\n//   const onClick = (movie) => {\n//     if (trailerUrl) {\n//       setTrailerUrl('');\n//     } else {\n//       movieTrailer(movie?.name || '')\n//         .then((url) => {\n//           const urlParams = new URLSearchParams(new URL(url).search);\n//           console.log(urlParams);\n//           setTrailerUrl(urlParams.get('v'));\n//         })\n//         .catch((err) => console.log(err));\n//     }\n//   };\n//   // poser_path looks like \"/2ST6l4WP7ZfqAetuttBqx8F3AAH.jpg\", and that's not a complete url. We need to append that to the base_url.\n//   const renderedMovies = movies.map((movie) => {\n//     return (\n//       <img\n//         onClick={() => onClick(movie)}\n//         className={`row__poster ${isLargeRow && 'row__posterLarge'}`}\n//         src={`${base_url}${\n//           isLargeRow ? movie.poster_path : movie.backdrop_path\n//         }`}\n//         alt={movie.name}\n//         key={movie.id}\n//       />\n//     );\n//   });\n//   return (\n//     <div className=\"row\">\n//       <h2>{title}</h2>\n//       <div className=\"row__posters\">{renderedMovies}</div>\n//       {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n//     </div>\n//   );\n// };\n\n\n_s(Movies, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n\n_c = Movies;\nexport default Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/pages/Movies.js"],"names":["React","useState","useEffect","AiIcons","tmdb","MovieRow","styles","base_url","Movies","movie","setMovie","fetchData","response","get","console","log","data","results","slider","slides","document","querySelectorAll","btnLeft","querySelector","btnRight","curSlide","maxSlide","length","goToSlide","slide","forEach","s","i","style","transform","nextSlide","prevSlide","init","createDots","activateDot","addEventListener","e","key","movies","title","img","poster","backdrop_path","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as AiIcons from 'react-icons/ai';\nimport tmdb from '../apis/tmdb';\nimport MovieRow from '../components/movies/MovieRow';\nimport styles from './Movies.module.css';\n\nconst base_url = 'https://image.tmdb.org/t/p/original';\n// const url =\n//   'https://api.themoviedb.org/3/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6';\n\nconst Movies = () => {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // try to fetch only english movies\n      const response = await tmdb.get(\n        '/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6'\n      );\n\n      console.log(response.data.results);\n      setMovie(response.data.results[0]);\n    };\n\n    fetchData();\n  }, []);\n\n  const slider = () => {\n    const slides = document.querySelectorAll('.slide');\n    const btnLeft = document.querySelector('.slider__btn--left');\n    const btnRight = document.querySelector('.slider__btn--right');\n\n    let curSlide = 0;\n    const maxSlide = slides.length;\n\n    const goToSlide = function (slide) {\n      slides.forEach(\n        (s, i) => (s.style.transform = `translateX(${100 * (i - slide)}%)`)\n      );\n    };\n\n    const nextSlide = function () {\n      if (curSlide === maxSlide - 1) {\n        curSlide = 0;\n      } else {\n        curSlide++;\n      }\n\n      goToSlide(curSlide);\n    };\n\n    const prevSlide = function () {\n      if (curSlide === 0) {\n        curSlide = maxSlide - 1;\n      } else {\n        curSlide--;\n      }\n      goToSlide(curSlide);\n    };\n\n    const init = function () {\n      goToSlide(0);\n      createDots();\n      activateDot(0);\n    };\n    init();\n\n    // Event handlers\n    btnRight.addEventListener('click', nextSlide);\n    btnLeft.addEventListener('click', prevSlide);\n\n    document.addEventListener('keydown', function (e) {\n      if (e.key === 'ArrowLeft') prevSlide();\n      e.key === 'ArrowRight' && nextSlide();\n    });\n  };\n  slider();\n\n  return (\n    <div className={styles.movies}>\n      <h3 className={styles.title}>Movies</h3>\n      <div className={styles.slider}>\n        <div className={styles.slide} style={{ transform: 'translateX()' }}>\n          {/* <div key={movie.id} className={styles.hero}> */}\n          <div className={styles.img}>\n            <img\n              className={styles.poster}\n              src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n              alt=\"\"\n            />\n          </div>\n          <p className={styles.name}>title</p>\n          {/* </div> */}\n        </div>\n        <div className={styles.slide} style={{ transform: 'translateX()' }}>\n          {/* <div key={movie.id} className={styles.hero}> */}\n          <div className={styles.img}>\n            <img\n              className={styles.poster}\n              src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n              alt=\"\"\n            />\n          </div>\n          <p className={styles.name}>title</p>\n          {/* </div> */}\n        </div>\n        <div className={styles.slide} style={{ transform: 'translateX()' }}>\n          {/* <div key={movie.id} className={styles.hero}> */}\n          <div className={styles.img}>\n            <img\n              className={styles.poster}\n              src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`}\n              alt=\"\"\n            />\n          </div>\n          <p className={styles.name}>title</p>\n          {/* </div> */}\n        </div>\n        <button className={styles['btn-left']}>\n          <AiIcons.AiOutlineLeft className={styles['btn-icon']} />\n        </button>\n        <button className={styles['btn-right']}>\n          <AiIcons.AiOutlineRight className={styles['btn-icon']} />\n        </button>\n      </div>\n      <MovieRow\n        url=\"/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n        category=\"Popular\"\n      />\n      <MovieRow\n        url=\"/movie/top_rated?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n        category=\"Top Rated\"\n      />\n      <MovieRow\n        url=\"/movie/upcoming?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n        category=\"Upcoming\"\n      />\n      <MovieRow\n        url=\"/movie/popular?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n        category=\"Popular\"\n      />\n    </div>\n  );\n\n  // as props: category(popular, toprated...),\n};\n\n// const Row = ({ title, fetchUrl, isLargeRow }) => {\n//   const [movies, setMovies] = useState([]);\n//   const [trailerUrl, setTrailerUrl] = useState('');\n\n//   // Run once when the row loads, and don't run again.\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       const response = await tmdb.get(fetchUrl);\n//       // console.log(response.data.results);\n//       setMovies(response.data.results);\n//     };\n\n//     fetchData();\n//   }, [fetchUrl]);\n\n//   const opts = {\n//     height: '390',\n//     width: '100%',\n//     playerVars: {\n//       autoplay: 1,\n//     },\n//   };\n\n//   // console.log(movies);\n\n//   const onClick = (movie) => {\n//     if (trailerUrl) {\n//       setTrailerUrl('');\n//     } else {\n//       movieTrailer(movie?.name || '')\n//         .then((url) => {\n//           const urlParams = new URLSearchParams(new URL(url).search);\n//           console.log(urlParams);\n//           setTrailerUrl(urlParams.get('v'));\n//         })\n//         .catch((err) => console.log(err));\n//     }\n//   };\n\n//   // poser_path looks like \"/2ST6l4WP7ZfqAetuttBqx8F3AAH.jpg\", and that's not a complete url. We need to append that to the base_url.\n//   const renderedMovies = movies.map((movie) => {\n//     return (\n//       <img\n//         onClick={() => onClick(movie)}\n//         className={`row__poster ${isLargeRow && 'row__posterLarge'}`}\n//         src={`${base_url}${\n//           isLargeRow ? movie.poster_path : movie.backdrop_path\n//         }`}\n//         alt={movie.name}\n//         key={movie.id}\n//       />\n//     );\n//   });\n\n//   return (\n//     <div className=\"row\">\n//       <h2>{title}</h2>\n//       <div className=\"row__posters\">{renderedMovies}</div>\n//       {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n//     </div>\n//   );\n// };\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}