{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/pages/DetailTV.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as IoIcons from 'react-icons/io';\nimport { fetchTvDetail } from '../actions';\nimport CastWrap from '../components/detail/CastWrap';\nimport Reviews from '../components/detail/Reviews';\nimport Related from '../components/detail/Related';\nimport styles from './DetailTV.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailTV = props => {\n  _s();\n\n  // Use useState for setting selected id\n  const [selectedMovie, setSelectedMovie] = useState(550); // Also movies added in the favorite could be stored in state. So, use redux for that?\n\n  useEffect(() => {\n    props.fetchTvDetail(selectedMovie); // props.fetchMovieCredits(selectedMovie);\n    // props.fetchMovieReviews(selectedMovie);\n    // props.fetchMovieRelated(selectedMovie);\n  }, []);\n\n  const calcYear = date => {\n    // const year = date.slice(0, 4);\n    // return year;\n    const year = date.split('-')[0];\n    return year;\n  };\n\n  const calcHour = runtime => {\n    // 139 -> 2hr 19min\n    const hr = Math.floor(runtime / 60);\n    const min = runtime % 60;\n\n    const hours = hr => {\n      if (hours) {\n        return `${hr} hr`;\n      } else {\n        return '';\n      }\n    };\n\n    return `${hours(hr)} ${min} min`;\n  };\n\n  if (!props.detail) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.item,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.nav,\n      children: \"TV Shows\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.detail,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.fig,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/original${props.detail.poster_path}`,\n            alt: props.detail.original_name,\n            className: styles.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.title,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: styles.titleName,\n              children: props.detail.original_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.favorite,\n              children: /*#__PURE__*/_jsxDEV(IoIcons.IoIosHeart, {\n                className: styles['favorite-icon']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.date,\n            children: calcYear(props.detail.first_air_date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.timerate,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.runtime,\n              children: `${calcHour(props.detail.episode_run_time)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.rate,\n              children: [/*#__PURE__*/_jsxDEV(IoIcons.IoIosStar, {\n                className: styles['rate-icon']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: props.detail.vote_average\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.others,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.play,\n              children: [/*#__PURE__*/_jsxDEV(IoIcons.IoIosPlay, {\n                className: styles['play-icon']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Play\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              href: props.detail.homepage,\n              className: styles.link,\n              children: [/*#__PURE__*/_jsxDEV(IoIcons.IoIosLink, {\n                className: styles['link-icon']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Website\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.overview,\n            children: props.detail.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DetailTV, \"7zMxLdjlX+iYsbpYcUEjwJ/P/fA=\");\n\n_c = DetailTV;\n\nconst mapStateToProps = state => {\n  // console.log(state.detail.detail);\n  return {\n    detail: state.detail.tvdetail\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTvDetail: fetchTvDetail // fetchMovieCredits: fetchMovieCredits,\n  // fetchMovieReviews: fetchMovieReviews,\n  // fetchMovieRelated: fetchMovieRelated,\n\n})(DetailTV);\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailTV\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/pages/DetailTV.js"],"names":["React","useState","useEffect","connect","IoIcons","fetchTvDetail","CastWrap","Reviews","Related","styles","DetailTV","props","selectedMovie","setSelectedMovie","calcYear","date","year","split","calcHour","runtime","hr","Math","floor","min","hours","detail","item","nav","container","fig","poster_path","original_name","img","content","title","titleName","favorite","first_air_date","timerate","episode_run_time","rate","vote_average","others","play","homepage","link","overview","mapStateToProps","state","tvdetail"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport * as IoIcons from 'react-icons/io';\nimport { fetchTvDetail } from '../actions';\nimport CastWrap from '../components/detail/CastWrap';\nimport Reviews from '../components/detail/Reviews';\nimport Related from '../components/detail/Related';\nimport styles from './DetailTV.module.css';\n\nconst DetailTV = (props) => {\n  // Use useState for setting selected id\n  const [selectedMovie, setSelectedMovie] = useState(550);\n\n  // Also movies added in the favorite could be stored in state. So, use redux for that?\n\n  useEffect(() => {\n    props.fetchTvDetail(selectedMovie);\n    // props.fetchMovieCredits(selectedMovie);\n    // props.fetchMovieReviews(selectedMovie);\n    // props.fetchMovieRelated(selectedMovie);\n  }, []);\n\n  const calcYear = (date) => {\n    // const year = date.slice(0, 4);\n    // return year;\n    const year = date.split('-')[0];\n    return year;\n  };\n\n  const calcHour = (runtime) => {\n    // 139 -> 2hr 19min\n    const hr = Math.floor(runtime / 60);\n    const min = runtime % 60;\n    const hours = (hr) => {\n      if (hours) {\n        return `${hr} hr`;\n      } else {\n        return '';\n      }\n    };\n    return `${hours(hr)} ${min} min`;\n  };\n\n  if (!props.detail) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className={styles.item}>\n      <h3 className={styles.nav}>TV Shows</h3>\n      <div className={styles.container}>\n        <div className={styles.detail}>\n          <div className={styles.fig}>\n            <img\n              src={`https://image.tmdb.org/t/p/original${props.detail.poster_path}`}\n              alt={props.detail.original_name}\n              className={styles.img}\n            />\n          </div>\n          <div className={styles.content}>\n            <div className={styles.title}>\n              <h4 className={styles.titleName}>{props.detail.original_name}</h4>\n              <button className={styles.favorite}>\n                <IoIcons.IoIosHeart className={styles['favorite-icon']} />\n              </button>\n            </div>\n            <p className={styles.date}>\n              {calcYear(props.detail.first_air_date)}\n            </p>\n            <div className={styles.timerate}>\n              <p className={styles.runtime}>\n                {`${calcHour(props.detail.episode_run_time)}`}\n              </p>\n              <p className={styles.rate}>\n                <IoIcons.IoIosStar className={styles['rate-icon']} />\n                <p>{props.detail.vote_average}</p>\n              </p>\n            </div>\n\n            {/* Have to consider when there are multiple genres */}\n            {/* <p className={styles.genre}>{selectedMovie.genres[0].name}</p> */}\n\n            <div className={styles.others}>\n              <button className={styles.play}>\n                <IoIcons.IoIosPlay className={styles['play-icon']} />\n                <p>Play</p>\n              </button>\n              <button href={props.detail.homepage} className={styles.link}>\n                <IoIcons.IoIosLink className={styles['link-icon']} />\n                <p>Website</p>\n              </button>\n            </div>\n            <p className={styles.overview}>{props.detail.overview}</p>\n          </div>\n        </div>\n\n        {/* <div className={styles.cast}>\n          <CastWrap />\n        </div>\n\n        <div className={styles.reviews}>\n          <Reviews />\n        </div>\n\n        <div className={styles.related}>\n          <Related />\n        </div> */}\n\n        {/* <div className={styles.seasons}></div>\n\n        <div className={styles.cast}>\n          <CastWrap />\n        </div>\n\n        <div className={styles.related}>\n          <Related />\n        </div> */}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  // console.log(state.detail.detail);\n  return {\n    detail: state.detail.tvdetail,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchTvDetail: fetchTvDetail,\n  // fetchMovieCredits: fetchMovieCredits,\n  // fetchMovieReviews: fetchMovieReviews,\n  // fetchMovieRelated: fetchMovieRelated,\n})(DetailTV);\n"]},"metadata":{},"sourceType":"module"}