{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Sidebar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = ({\n  item\n}) => {\n  _s();\n\n  const [subnav, setSubnav] = useState(false);\n\n  const showSubnav = () => {\n    setSubnav(!subnav);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"g8hLp77WQ+uaQWkY1LswmpimdZ8=\");\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/Sidebar.js"],"names":["React","useState","Link","styles","Sidebar","item","subnav","setSubnav","showSubnav"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMO,UAAU,GAAG,MAAM;AACvBD,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAnCD;;GAAMF,O;;KAAAA,O;AAqCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './Sidebar.module.css';\n\nconst Sidebar = ({ item }) => {\n  const [subnav, setSubnav] = useState(false);\n\n  const showSubnav = () => {\n    setSubnav(!subnav);\n  };\n\n  return (\n    <React.Fragment>\n      {/* <Link\n        to={item.path}\n        onClick={item.subNav && showSubnav}\n        className={styles.mainmenu}\n      >\n        {item.icon}\n        <span className={styles.span}>{item.title}</span>\n        <div className={styles.dropdown}>\n          {item.subNav && subnav\n            ? item.iconOpened\n            : item.subNav\n            ? item.iconClosed\n            : null}\n        </div>\n      </Link>\n      {subnav &&\n        item.subNav.map((sub, index) => {\n          return (\n            <Link to={sub.path} key={index} className={styles.submenu}>\n              {sub.icon}\n              <span className={styles.label}>{sub.title}</span>\n            </Link>\n          );\n        })} */}\n    </React.Fragment>\n  );\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}