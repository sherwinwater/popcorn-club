{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport SidebarData from './SidebarData';\nimport SubMenu from './SubMenu';\nimport styles from './Navbar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = props => {\n  _s();\n\n  const [sidebar, setSidebar] = useState(false);\n  const [subnav, setSubnav] = useState(false);\n\n  const showSidebar = () => {\n    setSidebar(!sidebar);\n  };\n\n  const showSubnav = () => {\n    setSubnav(!subnav);\n  };\n\n  const showBar = item => {\n    if (!item.subNav) showSidebar();\n    if (item.subNav) showSubnav();\n  }; // Try to close sidebar also when clicking somewhere in a body element using document.addEventListener('click, {})\n\n\n  const renderSubnav = item => {\n    if (!item.subNav) {\n      return null;\n    }\n\n    return item.subNav.map((sub, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.sublist,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: sub.path,\n          className: styles.submenu,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.label,\n            children: sub.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n    value: {\n      color: '#f7f7f7'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: styles.menu,\n        children: /*#__PURE__*/_jsxDEV(FaIcons.FaBars, {\n          onClick: showSidebar,\n          className: styles['menu-icon']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: sidebar ? `${styles.sidebar} ${styles.active}` : styles.sidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.toggle,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: styles.menu,\n          children: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlineClose, {\n            onClick: showSidebar,\n            className: styles['menu-icon']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.items,\n        children: SidebarData.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              className: styles[item.className] // onClick={() => showBar(item)}\n              ,\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: item.path,\n                className: styles.mainmenu,\n                onClick: () => showBar(item),\n                children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.maintitle,\n                  children: item.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.dropdown,\n                  children: item.subNav && subnav ? item.iconOpened : item.subNav ? item.iconClosed : null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: subnav ? `${styles.subitems} ${styles.open}` : styles.subitems,\n                children: renderSubnav(item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"IWk7Ddu6abkd0ImYAZNPufeyCi8=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/Navbar.js"],"names":["React","useState","Link","FaIcons","AiIcons","IconContext","SidebarData","SubMenu","styles","Navbar","props","sidebar","setSidebar","subnav","setSubnav","showSidebar","showSubnav","showBar","item","subNav","renderSubnav","map","sub","index","sublist","path","submenu","label","title","color","navbar","menu","children","active","toggle","items","className","mainmenu","icon","maintitle","dropdown","iconOpened","iconClosed","subitems","open"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport SidebarData from './SidebarData';\nimport SubMenu from './SubMenu';\nimport styles from './Navbar.module.css';\n\nconst Navbar = (props) => {\n  const [sidebar, setSidebar] = useState(false);\n  const [subnav, setSubnav] = useState(false);\n\n  const showSidebar = () => {\n    setSidebar(!sidebar);\n  };\n\n  const showSubnav = () => {\n    setSubnav(!subnav);\n  };\n\n  const showBar = (item) => {\n    if (!item.subNav) showSidebar();\n    if (item.subNav) showSubnav();\n  };\n\n  // Try to close sidebar also when clicking somewhere in a body element using document.addEventListener('click, {})\n\n  const renderSubnav = (item) => {\n    if (!item.subNav) {\n      return null;\n    }\n\n    return item.subNav.map((sub, index) => {\n      return (\n        <li className={styles.sublist}>\n          <Link to={sub.path} key={index} className={styles.submenu}>\n            <span className={styles.label}>{sub.title}</span>\n          </Link>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <IconContext.Provider value={{ color: '#f7f7f7' }}>\n      <div className={styles.navbar}>\n        <Link to=\"#\" className={styles.menu}>\n          <FaIcons.FaBars\n            onClick={showSidebar}\n            className={styles['menu-icon']}\n          />\n        </Link>\n        {props.children}\n      </div>\n      <nav\n        className={\n          sidebar ? `${styles.sidebar} ${styles.active}` : styles.sidebar\n        }\n      >\n        <div className={styles.toggle}>\n          <Link to=\"#\" className={styles.menu}>\n            <AiIcons.AiOutlineClose\n              onClick={showSidebar}\n              className={styles['menu-icon']}\n            />\n          </Link>\n        </div>\n        <ul className={styles.items}>\n          {SidebarData.map((item, index) => {\n            return (\n              <React.Fragment>\n                <li\n                  key={index}\n                  className={styles[item.className]}\n                  // onClick={() => showBar(item)}\n                >\n                  <Link\n                    to={item.path}\n                    className={styles.mainmenu}\n                    onClick={() => showBar(item)}\n                  >\n                    {item.icon}\n                    <span className={styles.maintitle}>{item.title}</span>\n                    <div className={styles.dropdown}>\n                      {/* {item.subNav ? item.iconClosed : null} */}\n                      {item.subNav && subnav\n                        ? item.iconOpened\n                        : item.subNav\n                        ? item.iconClosed\n                        : null}\n                    </div>\n                  </Link>\n\n                  {/* <ul className={styles.subitems}> */}\n                  <ul\n                    className={\n                      subnav\n                        ? `${styles.subitems} ${styles.open}`\n                        : styles.subitems\n                    }\n                  >\n                    {renderSubnav(item)}\n                  </ul>\n                  {/* <li className={styles.sublist}>\n                      <Link\n                        to=\"/movies/action\"\n                        key=\"key\"\n                        className={styles.submenu}\n                      >\n                        <span className={styles.label}>Action</span>\n                      </Link>\n                    </li>\n                    <li className={styles.sublist}>\n                      <Link\n                        to=\"/movies/adventure\"\n                        key=\"key\"\n                        className={styles.submenu}\n                      >\n                        <span className={styles.label}>Adventure</span>\n                      </Link>\n                    </li> */}\n                  {/* {subnav && <SubMenu item={item} />} */}\n                  {/* {<SubMenu item={item} />} */}\n\n                  {/* {subnav &&\n                  item.subNav.map((sub, index) => {\n                    return (\n                      <Link\n                        to={sub.path}\n                        key={index}\n                        className={styles.submenu}\n                      >\n                        {sub.icon}\n                        <span className={styles.label}>{sub.title}</span>\n                      </Link>\n                    );\n                  })} */}\n                </li>\n\n                {/* <SubMenu item={item} /> */}\n              </React.Fragment>\n            );\n          })}\n        </ul>\n      </nav>\n    </IconContext.Provider>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}