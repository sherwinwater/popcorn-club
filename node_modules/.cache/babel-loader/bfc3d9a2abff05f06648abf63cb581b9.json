{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/MovieRowWide.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport tmdb from '../../apis/tmdb';\nimport MovieList from './MovieList';\nimport styles from './MovieRow.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieRowWide = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      // try to fetch only english movies\n      const response = await tmdb.get(this.props.url);\n      console.log(response.data.results);\n      this.setState({\n        movies: response.data.results\n      });\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.category,\n      children: this.props.category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contents,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.wrapper,\n        children: /*#__PURE__*/_jsxDEV(MovieList, {\n          movies: this.state.movies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieRowWide, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = MovieRowWide;\nexport default MovieRowWide;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieRowWide\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/movies/MovieRowWide.js"],"names":["React","useState","useEffect","tmdb","MovieList","styles","MovieRowWide","movies","setMovies","fetchData","response","get","props","url","console","log","data","results","setState","container","category","contents","wrapper","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,SAAS,GAAG,YAAY;AAC5B;AACA,YAAMC,QAAQ,GAAG,MAAMP,IAAI,CAACQ,GAAL,CAAS,KAAKC,KAAL,CAAWC,GAApB,CAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,IAAT,CAAcC,OAA1B;AACA,WAAKC,QAAL,CAAc;AAAEX,QAAAA,MAAM,EAAEG,QAAQ,CAACM,IAAT,CAAcC;AAAxB,OAAd;AACD,KAND;;AAQAR,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACc,SAAvB;AAAA,4BACE;AAAG,MAAA,SAAS,EAAEd,MAAM,CAACe,QAArB;AAAA,gBAAgC,KAAKR,KAAL,CAAWQ;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACgB,QAAvB;AAAA,6BAEE;AAAI,QAAA,SAAS,EAAEhB,MAAM,CAACiB,OAAtB;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,MAAM,EAAE,KAAKC,KAAL,CAAWhB;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA1BD;;GAAMD,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport tmdb from '../../apis/tmdb';\nimport MovieList from './MovieList';\nimport styles from './MovieRow.module.css';\n\nconst MovieRowWide = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // try to fetch only english movies\n      const response = await tmdb.get(this.props.url);\n\n      console.log(response.data.results);\n      this.setState({ movies: response.data.results });\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className={styles.container}>\n      <p className={styles.category}>{this.props.category}</p>\n      <div className={styles.contents}>\n        {/* Can create moviecard component */}\n        <ul className={styles.wrapper}>\n          <MovieList movies={this.state.movies} />\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieRowWide;\n"]},"metadata":{},"sourceType":"module"}