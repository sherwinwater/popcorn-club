{"ast":null,"code":"import tmdb from '../apis/tmdb';\nimport requests from '../apis/requests';\nimport history from '../history'; // fetch movies based on selected menu whether it's genre, netflixoriginal, popular and so on from tmdb api\n// create action\n// And you call the action creator in componentDidMount of a component\n// url=\"/movie/now_playing?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n// HOME\n// export const fetchMovies = (type) => async (dispatch) => {\n//   const response = await tmdb.get(\n//     `/movie/${type}?api_key=8a45061d820fb7b5b5f574766f028ff6`\n//   );\n//   // console.log(response.data.results);\n//   dispatch({ type: 'MOVIE_NOWPLAYING', payload: response.data.results });\n// };\n\nexport const fetchMovieNowPlaying = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMovieNowPlaying); // console.log(response.data.results);\n\n  dispatch({\n    type: 'MOVIE_NOWPLAYING',\n    payload: response.data.results\n  });\n};\nexport const fetchTvOnAir = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchTvOnAir); // console.log(response.data.results);\n\n  dispatch({\n    type: 'TV_ONAIR',\n    payload: response.data.results\n  });\n}; // MOVIES\n\nexport const fetchMoviePopular = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMoviePopular);\n  dispatch({\n    type: 'MOVIE_POPULAR',\n    payload: response.data.results\n  });\n};\nexport const fetchMovieUpcoming = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMovieUpcoming);\n  dispatch({\n    type: 'MOVIE_UPCOMING',\n    payload: response.data.results\n  });\n};\nexport const fetchMovieTopRated = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchMovieTopRated);\n  dispatch({\n    type: 'MOVIE_TOPRATED',\n    payload: response.data.results\n  });\n}; // TV\n\nexport const fetchTvPopular = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchTvPopular);\n  dispatch({\n    type: 'TV_POPULAR',\n    payload: response.data.results\n  });\n};\nexport const fetchTvTopRated = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchTvTopRated);\n  dispatch({\n    type: 'TV_TOPRATED',\n    payload: response.data.results\n  });\n}; // DETAIL\n\nexport const fetchDetail = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchDetail);\n  dispatch({\n    type: 'DETAIL',\n    payload: response.data\n  });\n};\nexport const fetchCredits = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchCredits);\n  dispatch({\n    type: 'CREDITS',\n    payload: response.data.cast.slice(0, 15)\n  });\n};\nexport const fetchReviews = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchReviews);\n  dispatch({\n    type: 'REVIEWS',\n    payload: response.data.results.slice(0, 3)\n  });\n};\nexport const fetchRelated = () => async dispatch => {\n  const response = await tmdb.get(requests.fetchRelated);\n  dispatch({\n    type: 'RELATED',\n    payload: response.data.results\n  });\n}; // SEARCH\n\nexport const searchMovies = () => async dispatch => {\n  const response = await tmdb.get(requests.searchMovies);\n  dispatch({\n    type: 'SEARCH_MOVIES',\n    payload: response.data.results\n  });\n  history.push('/search/');\n};\nexport const searchTvShows = () => async dispatch => {\n  const response = await tmdb.get(requests.searchTvShows);\n  dispatch({\n    type: 'SEARCH_TVS',\n    payload: response.data.results\n  });\n}; // by Genres\n\nexport const fetchActionMovies = () => async dispatch => {\n  // const response = await tmdb.get(`${requests.fetchActionMovies}&page=${page}`);\n  // dispatch({\n  //   type: 'FETCH_ACTION',\n  //   payload: response.data.results,\n  // });\n  const response = await Promise.all([tmdb.get(`${requests.fetchActionMovies}&page=1`), tmdb.get(`${requests.fetchActionMovies}&page=2`), tmdb.get(`${requests.fetchActionMovies}&page=3`)]);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: 'FETCH_ACTION',\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchAdventureMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchAdventureMovies}&page=1`), tmdb.get(`${requests.fetchAdventureMovies}&page=2`), tmdb.get(`${requests.fetchAdventureMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: 'FETCH_ADVENTURE',\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchAnimationMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchAnimationMovies}&page=1`), tmdb.get(`${requests.fetchAnimationMovies}&page=2`), tmdb.get(`${requests.fetchAnimationMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: 'FETCH_ANIMATION',\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchComedyMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchComedyMovies}&page=1`), tmdb.get(`${requests.fetchComedyMovies}&page=2`), tmdb.get(`${requests.fetchComedyMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: 'FETCH_COMEDY',\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchDocumentaryMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchDocumentaryMovies}&page=1`), tmdb.get(`${requests.fetchDocumentaryMovies}&page=2`), tmdb.get(`${requests.fetchDocumentaryMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: 'FETCH_DOCUMENTARY',\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchDramaMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchDramaMovies}&page=1`), tmdb.get(`${requests.fetchDramaMovies}&page=2`), tmdb.get(`${requests.fetchDramaMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: 'FETCH_DRAMA',\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchFantasyMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchFantasyMovies}&page=1`), tmdb.get(`${requests.fetchFantasyMovies}&page=2`), tmdb.get(`${requests.fetchFantasyMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: 'FETCH_FANTASY',\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchHorrorMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchHorrorMovies}&page=1`), tmdb.get(`${requests.fetchHorrorMovies}&page=2`), tmdb.get(`${requests.fetchHorrorMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: 'FETCH_HORROR',\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchRomanceMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchRomanceMovies}&page=1`), tmdb.get(`${requests.fetchRomanceMovies}&page=2`), tmdb.get(`${requests.fetchRomanceMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: 'FETCH_ROMANCE',\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};\nexport const fetchSciFiMovies = () => async dispatch => {\n  const response = await Promise.all([tmdb.get(`${requests.fetchSciFiMovies}&page=1`), tmdb.get(`${requests.fetchSciFiMovies}&page=2`), tmdb.get(`${requests.fetchSciFiMovies}&page=3`)]);\n  console.log(response.data);\n  const data = response.map(res => res.data.results);\n  dispatch({\n    type: 'FETCH_SCIFI',\n    payload: [...data[0], ...data[1], ...data[2]]\n  });\n};","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/actions/index.js"],"names":["tmdb","requests","history","fetchMovieNowPlaying","dispatch","response","get","type","payload","data","results","fetchTvOnAir","fetchMoviePopular","fetchMovieUpcoming","fetchMovieTopRated","fetchTvPopular","fetchTvTopRated","fetchDetail","fetchCredits","cast","slice","fetchReviews","fetchRelated","searchMovies","push","searchTvShows","fetchActionMovies","Promise","all","map","res","fetchAdventureMovies","console","log","fetchAnimationMovies","fetchComedyMovies","fetchDocumentaryMovies","fetchDramaMovies","fetchFantasyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchSciFiMovies"],"mappings":"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","sourcesContent":["import tmdb from '../apis/tmdb';\nimport requests from '../apis/requests';\nimport history from '../history';\n\n// fetch movies based on selected menu whether it's genre, netflixoriginal, popular and so on from tmdb api\n// create action\n// And you call the action creator in componentDidMount of a component\n\n// url=\"/movie/now_playing?api_key=8a45061d820fb7b5b5f574766f028ff6\"\n\n// HOME\n// export const fetchMovies = (type) => async (dispatch) => {\n//   const response = await tmdb.get(\n//     `/movie/${type}?api_key=8a45061d820fb7b5b5f574766f028ff6`\n//   );\n\n//   // console.log(response.data.results);\n//   dispatch({ type: 'MOVIE_NOWPLAYING', payload: response.data.results });\n// };\n\nexport const fetchMovieNowPlaying = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMovieNowPlaying);\n\n  // console.log(response.data.results);\n  dispatch({ type: 'MOVIE_NOWPLAYING', payload: response.data.results });\n};\n\nexport const fetchTvOnAir = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchTvOnAir);\n\n  // console.log(response.data.results);\n  dispatch({ type: 'TV_ONAIR', payload: response.data.results });\n};\n\n// MOVIES\nexport const fetchMoviePopular = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMoviePopular);\n\n  dispatch({ type: 'MOVIE_POPULAR', payload: response.data.results });\n};\n\nexport const fetchMovieUpcoming = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMovieUpcoming);\n\n  dispatch({ type: 'MOVIE_UPCOMING', payload: response.data.results });\n};\n\nexport const fetchMovieTopRated = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchMovieTopRated);\n\n  dispatch({ type: 'MOVIE_TOPRATED', payload: response.data.results });\n};\n\n// TV\nexport const fetchTvPopular = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchTvPopular);\n\n  dispatch({ type: 'TV_POPULAR', payload: response.data.results });\n};\n\nexport const fetchTvTopRated = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchTvTopRated);\n\n  dispatch({ type: 'TV_TOPRATED', payload: response.data.results });\n};\n\n// DETAIL\nexport const fetchDetail = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchDetail);\n\n  dispatch({ type: 'DETAIL', payload: response.data });\n};\n\nexport const fetchCredits = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchCredits);\n\n  dispatch({ type: 'CREDITS', payload: response.data.cast.slice(0, 15) });\n};\n\nexport const fetchReviews = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchReviews);\n\n  dispatch({ type: 'REVIEWS', payload: response.data.results.slice(0, 3) });\n};\n\nexport const fetchRelated = () => async (dispatch) => {\n  const response = await tmdb.get(requests.fetchRelated);\n\n  dispatch({ type: 'RELATED', payload: response.data.results });\n};\n\n// SEARCH\nexport const searchMovies = () => async (dispatch) => {\n  const response = await tmdb.get(requests.searchMovies);\n\n  dispatch({ type: 'SEARCH_MOVIES', payload: response.data.results });\n\n  history.push('/search/');\n};\n\nexport const searchTvShows = () => async (dispatch) => {\n  const response = await tmdb.get(requests.searchTvShows);\n\n  dispatch({ type: 'SEARCH_TVS', payload: response.data.results });\n};\n\n// by Genres\nexport const fetchActionMovies = () => async (dispatch) => {\n  // const response = await tmdb.get(`${requests.fetchActionMovies}&page=${page}`);\n\n  // dispatch({\n  //   type: 'FETCH_ACTION',\n  //   payload: response.data.results,\n  // });\n\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchActionMovies}&page=1`),\n    tmdb.get(`${requests.fetchActionMovies}&page=2`),\n    tmdb.get(`${requests.fetchActionMovies}&page=3`),\n  ]);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: 'FETCH_ACTION',\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchAdventureMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchAdventureMovies}&page=1`),\n    tmdb.get(`${requests.fetchAdventureMovies}&page=2`),\n    tmdb.get(`${requests.fetchAdventureMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: 'FETCH_ADVENTURE',\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchAnimationMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchAnimationMovies}&page=1`),\n    tmdb.get(`${requests.fetchAnimationMovies}&page=2`),\n    tmdb.get(`${requests.fetchAnimationMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: 'FETCH_ANIMATION',\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchComedyMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchComedyMovies}&page=1`),\n    tmdb.get(`${requests.fetchComedyMovies}&page=2`),\n    tmdb.get(`${requests.fetchComedyMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: 'FETCH_COMEDY',\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchDocumentaryMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchDocumentaryMovies}&page=1`),\n    tmdb.get(`${requests.fetchDocumentaryMovies}&page=2`),\n    tmdb.get(`${requests.fetchDocumentaryMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: 'FETCH_DOCUMENTARY',\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchDramaMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchDramaMovies}&page=1`),\n    tmdb.get(`${requests.fetchDramaMovies}&page=2`),\n    tmdb.get(`${requests.fetchDramaMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: 'FETCH_DRAMA',\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchFantasyMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchFantasyMovies}&page=1`),\n    tmdb.get(`${requests.fetchFantasyMovies}&page=2`),\n    tmdb.get(`${requests.fetchFantasyMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: 'FETCH_FANTASY',\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchHorrorMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchHorrorMovies}&page=1`),\n    tmdb.get(`${requests.fetchHorrorMovies}&page=2`),\n    tmdb.get(`${requests.fetchHorrorMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: 'FETCH_HORROR',\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchRomanceMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchRomanceMovies}&page=1`),\n    tmdb.get(`${requests.fetchRomanceMovies}&page=2`),\n    tmdb.get(`${requests.fetchRomanceMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: 'FETCH_ROMANCE',\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n\nexport const fetchSciFiMovies = () => async (dispatch) => {\n  const response = await Promise.all([\n    tmdb.get(`${requests.fetchSciFiMovies}&page=1`),\n    tmdb.get(`${requests.fetchSciFiMovies}&page=2`),\n    tmdb.get(`${requests.fetchSciFiMovies}&page=3`),\n  ]);\n\n  console.log(response.data);\n\n  const data = response.map((res) => res.data.results);\n\n  dispatch({\n    type: 'FETCH_SCIFI',\n    payload: [...data[0], ...data[1], ...data[2]],\n  });\n};\n"]},"metadata":{},"sourceType":"module"}