{"ast":null,"code":"var _jsxFileName = \"/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport SidebarData from './SidebarData';\nimport SubMenu from './SubMenu';\nimport styles from './Navbar.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = props => {\n  _s();\n\n  const [sidebar, setSidebar] = useState(false);\n  const [subnav, setSubnav] = useState(false);\n\n  const showSidebar = () => {\n    setSidebar(!sidebar);\n  };\n\n  const showSubnav = () => {\n    setSubnav(!subnav);\n  };\n\n  const showBar = item => {\n    if (item.subNav) {\n      showSubnav();\n    } else {\n      showSidebar();\n    }\n  }; // Try to close sidebar also when clicking somewhere in a body element using document.addEventListener('click, {})\n\n\n  const showSubMenu = (item, index) => {\n    var _item$subNav;\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: styles[item.className],\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: item.path,\n        className: styles.mainmenu,\n        onClick: () => showBar(item),\n        children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.maintitle,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.dropdown,\n          children: item.subNav && subnav ? item.iconOpened : item.subNav ? item.iconClosed : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), subnav && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.subitems,\n        children: (_item$subNav = item.subNav) === null || _item$subNav === void 0 ? void 0 : _item$subNav.map((sub, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: styles.sublist,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: sub.path,\n              className: styles.submenu,\n              onClick: showSidebar,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.label,\n                children: sub.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n    value: {\n      color: '#f7f7f7'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.navbar,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        className: styles.menu,\n        children: /*#__PURE__*/_jsxDEV(FaIcons.FaBars, {\n          onClick: showSidebar,\n          className: styles['menu-icon']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), props.children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: sidebar ? `${styles.sidebar} ${styles.active}` : styles.sidebar,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.toggle,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"#\",\n          className: styles.menu,\n          children: /*#__PURE__*/_jsxDEV(AiIcons.AiOutlineClose, {\n            onClick: showSidebar,\n            className: styles['menu-icon']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.items,\n        children: SidebarData.map((item, index) => {\n          return showSubMenu(item, index);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"IWk7Ddu6abkd0ImYAZNPufeyCi8=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/yumie/Desktop/Programming/Project/MyProject/popcorn-club/src/components/Navbar.js"],"names":["React","useState","Link","FaIcons","AiIcons","IconContext","SidebarData","SubMenu","styles","Navbar","props","sidebar","setSidebar","subnav","setSubnav","showSidebar","showSubnav","showBar","item","subNav","showSubMenu","index","className","path","mainmenu","icon","maintitle","title","dropdown","iconOpened","iconClosed","subitems","map","sub","sublist","submenu","label","color","navbar","menu","children","active","toggle","items"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as FaIcons from 'react-icons/fa';\nimport * as AiIcons from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\nimport SidebarData from './SidebarData';\nimport SubMenu from './SubMenu';\nimport styles from './Navbar.module.css';\n\nconst Navbar = (props) => {\n  const [sidebar, setSidebar] = useState(false);\n  const [subnav, setSubnav] = useState(false);\n\n  const showSidebar = () => {\n    setSidebar(!sidebar);\n  };\n\n  const showSubnav = () => {\n    setSubnav(!subnav);\n  };\n\n  const showBar = (item) => {\n    if (item.subNav) {\n      showSubnav();\n    } else {\n      showSidebar();\n    }\n  };\n\n  // Try to close sidebar also when clicking somewhere in a body element using document.addEventListener('click, {})\n\n  const showSubMenu = (item, index) => {\n    return (\n      <li key={index} className={styles[item.className]}>\n        <Link\n          to={item.path}\n          className={styles.mainmenu}\n          onClick={() => showBar(item)}\n        >\n          {item.icon}\n          <span className={styles.maintitle}>{item.title}</span>\n          <div className={styles.dropdown}>\n            {item.subNav && subnav\n              ? item.iconOpened\n              : item.subNav\n              ? item.iconClosed\n              : null}\n          </div>\n        </Link>\n\n        {subnav && (\n          <ul className={styles.subitems}>\n            {item.subNav?.map((sub, index) => {\n              return (\n                <li className={styles.sublist}>\n                  <Link\n                    to={sub.path}\n                    key={index}\n                    className={styles.submenu}\n                    onClick={showSidebar}\n                  >\n                    <span className={styles.label}>{sub.title}</span>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </li>\n    );\n  };\n\n  return (\n    <IconContext.Provider value={{ color: '#f7f7f7' }}>\n      <div className={styles.navbar}>\n        <Link to=\"#\" className={styles.menu}>\n          <FaIcons.FaBars\n            onClick={showSidebar}\n            className={styles['menu-icon']}\n          />\n        </Link>\n        {props.children}\n      </div>\n      <nav\n        className={\n          sidebar ? `${styles.sidebar} ${styles.active}` : styles.sidebar\n        }\n      >\n        <div className={styles.toggle}>\n          <Link to=\"#\" className={styles.menu}>\n            <AiIcons.AiOutlineClose\n              onClick={showSidebar}\n              className={styles['menu-icon']}\n            />\n          </Link>\n        </div>\n        <ul className={styles.items}>\n          {SidebarData.map((item, index) => {\n            return showSubMenu(item, index);\n          })}\n        </ul>\n      </nav>\n    </IconContext.Provider>\n  );\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}